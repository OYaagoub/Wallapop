-- phpMyAdmin SQL Dump
-- version 5.1.1deb5ubuntu1
-- https://www.phpmyadmin.net/
--
-- Servidor: localhost:3306
-- Tiempo de generación: 21-11-2023 a las 20:04:05
-- Versión del servidor: 8.0.34-0ubuntu0.22.04.1
-- Versión de PHP: 8.1.2-1ubuntu2.14

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `daw2`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `apuntes`
--

CREATE TABLE `apuntes` (
  `id` int NOT NULL,
  `nombre` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `apunte` longtext COLLATE utf8mb4_general_ci,
  `tema_id` int NOT NULL,
  `fecha` datetime DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `apuntes`
--

INSERT INTO `apuntes` (`id`, `nombre`, `apunte`, `tema_id`, `fecha`) VALUES
(8, 'Declaration A New Path \"yaagoub.com/example\"', '// new class inside package<Controllers>  in Source package\r\n\r\npackage com.yaagoub.controllers;\r\n\r\n-------------------import package-----------\r\nimport javax.servlet.annotation.WebServlet;\r\n------------------------------------------\r\n/**\r\n *\r\n * @author alumno\r\n */\r\n--------------------declaration---------\r\n@WebServlet(urlPatterns = \"/login\")\r\n-----------------fin--------------------\r\npublic class LoginServlet {\r\n    \r\n}\r\n', 50, '2023-09-29 13:05:06'),
(9, 'Class Inside Controllers Package get Responde and Request ', '\r\npackage com.yaagoub.controllers;\r\n\r\n-import HttpServlet package that will get request and responde from Wevservlet-\r\nimport javax.servlet.http.HttpServlet;\r\n--------------------------------------\r\n\r\n\r\n/**\r\n *\r\n * @author alumno\r\n */\r\n\r\npublic class LoginServlet extends HttpServlet{   // we do  extends to the package\r\n\r\n    \r\n    \r\n}\r\n', 50, '2023-09-29 13:18:59'),
(10, 'Class Inside Controllers Should have a Fanction name\'s doGet() To Get the respond and request', '\r\npackage com.yaagoub.controllers;\r\n-------------------imports------------------\r\nimport java.io.IOException;\r\nimport javax.servlet.ServletException;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n-----------------------fin------------------\r\n\r\n/**\r\n *\r\n * @author alumno\r\n */\r\n\r\npublic class LoginServlet extends HttpServlet{\r\n     -------------------------fuction doGet------------------------------\r\n    @Override\r\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) \r\n            throws ServletException, IOException {\r\n         \r\n    }\r\n    ------------------------------fin------------------------------------------\r\n}\r\n', 50, '2023-09-29 13:32:43'),
(11, 'Class Inside Controllers Incide doGet() to Build Our Page Html WE USE Function PrintWrite', '---------------imports------------\r\n\r\nimport java.io.PrintWriter;\r\n-----------------fin-----------------\r\n\r\n\r\n\r\n@Override\r\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) \r\n            throws ServletException, IOException {\r\n        ---------------------------------------------------------\r\n//PrintWriter variable =(HttpServletResponse)resp.getWriter();\r\nPrintWriter out = resp.getWriter();\r\n        out.println(\"\"\"  CODE HTML     \"\"\");\r\n    }', 50, '2023-09-29 13:56:08'),
(13, 'Separed String by \"characters \" using explode() function', '//Separar la variable $nombreCompleto y guardar en $nombre solo el nombre\r\n        //y en $apellidos los apellidos\r\n        $nombreCompleto=\"oussama, yaagoub\"\r\n        $array = explode(\", \", $nombreCompleto);\r\n        $apellidos = $array[0];\r\n        $nombre = $array[1];\r\n        echo $apellidos;\r\n        echo $nombre;\r\n\r\n\r\noutput -----------------\r\n\r\nyaagoub\r\noussama', 26, '2023-09-29 16:22:05'),
(14, 'Separed String using substr() function', '$nombreCompleto=\"yaagoub, oussama\";\r\n$apellidos = substr($nombreCompleto,0,strpos($nombreCompleto,\",\")); \r\n // take from 0 to \",\"\r\n$nombre = substr($nombreCompleto,strpos($nombreCompleto,\",\")+2, strlen($nombreCompleto));\r\n // take from \",\"+2 to end\r\necho \"$nombre $apellidos <br>\";\r\n\r\n\r\n\r\noutput ----------------\r\n\r\noussama yaagoub', 26, '2023-09-29 16:28:07'),
(16, 'Define Variable  can\'t change his value and we use it like config parameters', '\r\n\r\n\r\n\r\n\r\n\r\n\r\ndefine(\"MYSQL_USER\",\"root\");    //Define constantes, se utiliza para parámetros de configuración \r\n\r\n        echo MYSQL_USER;', 26, '2023-09-29 16:31:54'),
(17, 'Different Functions', '\r\n//declare(strict_types=1); // Tipado fuerte, da error si los tipos no coinciden\r\n\r\n\r\nfunction sumar(int|string $a,int|string $b):int {\r\n    return $a+$b;\r\n}\r\n\r\necho sumar(\"4\",5);\r\n\r\n//Paso de parámetros por referencia añadiendo & delante del nombre de la variable\r\nfunction incrementar(int &$numero):int{\r\n    return ++$numero;\r\n}\r\n$edad = 30;\r\n$nueva_edad = incrementar($edad);\r\necho \"\n Pepe tiene $edad años y se ha incrementado a $nueva_edad\";\r\n\r\n//Parmámetros con valor por defecto\r\nfunction conectarDB(string $usuario=\"root\", string $password=\"\", string $host=\"localhost\"){\r\n    //Nos conectamos a MySQL con los parámetros...\r\n    echo \"\n<br>Conectado a $host con usuario $usuario / $password\";\r\n}\r\nconectarDB();\r\nconectarDB(\"pepe\");\r\nconectarDB(\"pepe\",\"1234\");\r\nconectarDB(\"pepe\",\"1234\",\"192.168.1.11\");\r\n', 26, '2023-09-29 16:36:01'),
(18, 'Arrays and Foreach', '\r\n\r\n\r\n\r\n<?php \r\n\r\n//Dos formas de crear arrays\r\n$alumnosDAW = [\"pepe\", \"juan\", \"maria\"];\r\n$alumnosDAM = array(\"pepe\",\"david\",\"antonio\");\r\n\r\n//Modificar un elemento de un array\r\n$alumnosDAM[0]=\"Jose\";\r\n\r\n//Añadir un elemento al final de un array\r\n$alumnosDAM[] = \"Rocio\";\r\n\r\n//Añadir un elemento en una posición concreta del array\r\n$alumnosDAM[10] = \"Javier\";\r\n\r\nforeach ($alumnosDAM as $alumno) {\r\n    echo \"$alumno\n\";\r\n}\r\n\r\n\r\n//Array asociativo (las posiciones las nombramos con texto en vez de con un índice numérico)\r\n$edadAlumnos = [\"pepe\"=>21, \"monica\"=>19, \"juan\"=>22];\r\n\r\nforeach ($edadAlumnos as $posicion => $valor) {\r\n    echo \"$posicion: $valor\n\";\r\n}\r\n\r\necho \"<br>\";\r\n\r\n//Arrays de dos dimensiones\r\n$cars = [[\"Volvo\",23,4], [\"Land Rover\",44,33],[\"Saab\",34,33]];\r\nforeach($cars as $car){\r\n    echo \"Marca: \" . $car[0] . \". Stock: \" . $car[1] . \". Vendidos: \" . $car[2] .\"<br>\";\r\n}\r\n\r\nforeach ($_SERVER as $posicion => $valor){\r\n    echo \"$posicion: $valor<br>\";\r\n}\r\n\r\n', 26, '2023-09-29 16:41:12'),
(19, 'Check REQUEST_METHOD if is \"Post\" OR \"Get\"', '//GET, se envía por la barra de direcciones y es visible. \r\nTiene un límite de 2000 caracteres. No permite envío de archivos.\r\n//POST, no es visible en la barra de direcciones,\r\n No tiene límite de caracteres. Permite el envío de archivos.\r\necho \r\n\"La petición de esta página se ha hecho por\".$_SERVER[\"REQUEST_METHOD\"].\"<br>\";\r\n\r\n\r\n\r\n\r\n\r\nif($_SERVER[\"REQUEST_METHOD\"] == \"POST\")\r\n{\r\n    echo \"email: \". $_POST[\"email\"] . \"<br>\";\r\n    echo \"password: \". $_POST[\"password\"] . \"<br>\";\r\n}', 26, '2023-09-29 16:44:39'),
(20, '$GLOBALS global variable which is used to access global variables from anywhere in the PHP script ', '<?php\r\n$x = 75;\r\n$y = 25;\r\n \r\nfunction addition() {\r\n  $GLOBALS[\"z\"] = $GLOBALS[\"x\"] + $GLOBALS[\"y\"];\r\n}\r\n \r\naddition();\r\necho $z;\r\n?> \r\noutput : 100\r\n', 26, '2023-09-29 17:17:19'),
(21, '$_SERVER is a PHP super global variable which holds information about headers, paths, and script locations. ', '<?php\r\necho $_SERVER[\"PHP_SELF\"];\r\necho \"<br>\";\r\necho $_SERVER[\"SERVER_NAME\"];\r\necho \"<br>\";\r\necho $_SERVER[\"HTTP_HOST\"];\r\necho \"<br>\";\r\necho $_SERVER[\"HTTP_REFERER\"];\r\necho \"<br>\";\r\necho $_SERVER[\"HTTP_USER_AGENT\"];\r\necho \"<br>\";\r\necho $_SERVER[\"SCRIPT_NAME\"];\r\n?> \r\n\r\n\r\nElement/Code->Description\r\n$_SERVER[\"PHP_SELF\"]->Returns the filename of the currently executing script\r\n$_SERVER[\"GATEWAY_INTERFACE\"]->Returns the version of the Common Gateway Interface (CGI) the server is using\r\n$_SERVER[\"SERVER_ADDR\"]->Returns the IP address of the host server\r\n$_SERVER[\"SERVER_NAME\"]->Returns the name of the host server (such as www.w3schools.com)\r\n$_SERVER[\"SERVER_SOFTWARE\"]->Returns the server identification string (such as Apache/2.2.24)\r\n$_SERVER[\"SERVER_PROTOCOL\"]->Returns the name and revision of the information protocol (such as HTTP/1.1)\r\n$_SERVER[\"REQUEST_METHOD\"]->Returns the request method used to access the page (such as POST)\r\n$_SERVER[\"REQUEST_TIME\"]->Returns the timestamp of the start of the request (such as 1377687496)\r\n$_SERVER[\"QUERY_STRING\"]->Returns the query string if the page is accessed via a query string\r\n$_SERVER[\"HTTP_ACCEPT\"]->Returns the Accept header from the current request\r\n$_SERVER[\"HTTP_ACCEPT_CHARSET\"]->Returns the Accept_Charset header from the current request (such as utf-8,ISO-8859-1)\r\n$_SERVER[\"HTTP_HOST\"]->Returns the Host header from the current request\r\n$_SERVER[\"HTTP_REFERER\"]->Returns the complete URL of the current page (not reliable because not all user-agents support it)\r\n$_SERVER[\"HTTPS\"]->Is the script queried through a secure HTTP protocol\r\n$_SERVER[\"REMOTE_ADDR\"]->Returns the IP address from where the user is viewing the current page\r\n$_SERVER[\"REMOTE_HOST\"]->Returns the Host name from where the user is viewing the current page\r\n$_SERVER[\"REMOTE_PORT\"]->Returns the port being used on the user\"s machine to communicate with the web server\r\n$_SERVER[\"SCRIPT_FILENAME\"]->Returns the absolute pathname of the currently executing script\r\n$_SERVER[\"SERVER_ADMIN\"]->Returns the value given to the SERVER_ADMIN directive in the web server configuration file \r\n(if your script runs on a virtual host, it will be the value defined for that virtual host) (such as someone@w3schools.com)\r\n$_SERVER[\"SERVER_PORT\"]->Returns the port on the server machine being used by the web server for communication (such as 80)\r\n$_SERVER[\"SERVER_SIGNATURE\"]->Returns the server version and virtual host name which are added to server-generated pages\r\n$_SERVER[\"PATH_TRANSLATED\"]->Returns the file system based path to the current script\r\n$_SERVER[\"SCRIPT_NAME\"]->Returns the path of the current script\r\n$_SERVER[\"SCRIPT_URI\"]->Returns the URI of the current page', 26, '2023-09-29 17:21:05'),
(22, 'Validate Form Data With PHP', '<?php\r\n// define variables and set to empty values\r\n$name = $email = $gender = $comment = $website = \"\";\r\n\r\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\r\n  $name = test_input($_POST[\"name\"]);\r\n  $email = test_input($_POST[\"email\"]);\r\n  $website = test_input($_POST[\"website\"]);\r\n  $comment = test_input($_POST[\"comment\"]);\r\n  $gender = test_input($_POST[\"gender\"]);\r\n}\r\n\r\nfunction test_input($data) {\r\n  $data = trim($data); // remove space from start and the end\r\n  $data = stripslashes($data); //function removes any backslashes () from the string. \r\n  // function converts any special characters in the string to their corresponding HTML entities.\"<>...\"\r\n  $data = htmlspecialchars($data);\r\n   \r\n  return $data;\r\n}\r\n?>', 26, '2023-09-29 17:34:00'),
(23, 'PHP - Required Fields', ' <?php\r\n// define variables and set to empty values\r\n$nameErr = $emailErr = $genderErr = $websiteErr = \"\";\r\n$name = $email = $gender = $comment = $website = \"\";\r\n\r\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\r\n  if (empty($_POST[\"name\"])) {\r\n    $nameErr = \"Name is required\";\r\n  } else {\r\n    $name = test_input($_POST[\"name\"]);\r\n  }\r\n\r\n  if (empty($_POST[\"email\"])) {\r\n    $emailErr = \"Email is required\";\r\n  } else {\r\n    $email = test_input($_POST[\"email\"]);\r\n  }\r\n\r\n  if (empty($_POST[\"website\"])) {\r\n    $website = \"\";\r\n  } else {\r\n    $website = test_input($_POST[\"website\"]);\r\n  }\r\n\r\n  if (empty($_POST[\"comment\"])) {\r\n    $comment = \"\";\r\n  } else {\r\n    $comment = test_input($_POST[\"comment\"]);\r\n  }\r\n\r\n  if (empty($_POST[\"gender\"])) {\r\n    $genderErr = \"Gender is required\";\r\n  } else {\r\n    $gender = test_input($_POST[\"gender\"]);\r\n  }\r\n}\r\nfunction test_input($data) {\r\n  $data = trim($data);\r\n  $data = stripslashes($data);\r\n  $data = htmlspecialchars($data);\r\n  return $data;\r\n}\r\n?>\r\n', 26, '2023-09-29 17:36:47'),
(24, 'PHP - Validate E-mail', '\r\n$email = test_input($_POST[\"email\"]);\r\nif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\r\n  $emailErr = \"Invalid email format\";\r\n}', 26, '2023-09-29 17:46:35'),
(25, 'PHP - Validate URL', 'PHP - Validate URL\r\n\r\n$website = test_input($_POST[\"website\"]);\r\nif (!preg_match(\"/(?:(?:https?|ftp)://|www.)[-a-z0-9+&@#/%?=~_|!:,.;]*[-a-z0-9+&@#/%=~_|]/i\",$website)) {\r\n  $websiteErr = \"Invalid URL\";\r\n}', 26, '2023-09-29 17:47:14'),
(26, 'PHP Date and Time', '\r\n<?php\r\necho \"Today is \" . date(\"Y/m/d\") . \"<br>\";\r\necho \"Today is \" . date(\"Y.m.d\") . \"<br>\";\r\necho \"Today is \" . date(\"Y-m-d\") . \"<br>\";\r\necho \"Today is \" . date(\"l\");\r\n?>\r\n\r\noutput:\r\n\r\nToday is 2020/11/03\r\nToday is 2020.11.03\r\nToday is 2020-11-03\r\nToday is Tuesday ', 26, '2023-09-29 17:52:44'),
(27, 'PHP File Handling read and print the Content of file txt', '// file.txt\r\nAJAX = Asynchronous JavaScript and XML\r\nCSS = Cascading Style Sheets \r\nHTML = Hyper Text Markup Language \r\nPHP = PHP Hypertext Preprocessor \r\nSQL = Structured Query Language \r\nSVG = Scalable Vector Graphics \r\nXML = EXtensible Markup Language236 \r\n\r\n\r\n// file php\r\n\r\n<?php\r\necho readfile(\"webdictionary.txt\");\r\n?>\r\n\r\n\r\n\r\noutput:\r\n\r\nAJAX = Asynchronous JavaScript and XML\r\nCSS = Cascading Style Sheets \r\nHTML = Hyper Text Markup Language \r\nPHP = PHP Hypertext Preprocessor \r\nSQL = Structured Query Language \r\nSVG = Scalable Vector Graphics \r\nXML = EXtensible Markup Language236 ', 26, '2023-09-29 17:57:02'),
(29, 'PHP File Open/Read/Close', 'PHP File Open/Read/Close\r\n\r\n// webdictionary.txt\r\n\r\nAJAX = Asynchronous JavaScript and XML\r\nCSS = Cascading Style Sheets\r\nHTML = Hyper Text Markup Language\r\nPHP = PHP Hypertext Preprocessor\r\nSQL = Structured Query Language\r\nSVG = Scalable Vector Graphics\r\nXML = EXtensible Markup Language\r\n\r\n// php file\r\n\r\n\r\n <?php\r\n//fopen for open file and \"r\" means for read and die() function for show error message\r\n$myfile = fopen(\"webdictionary.txt\", \"r\") or die(\"Unable to open file!\"); \r\necho fread($myfile,filesize(\"webdictionary.txt\")); //read content file and print it\r\n// The first parameter of fread() contains the name of the file to read from and\r\n// the second parameter specifies the maximum number of bytes to read.\r\nfclose($myfile); //close content file\r\n?> \r\n\r\n\r\noutput:\r\n\r\n\r\nAJAX = Asynchronous JavaScript and XML\r\nCSS = Cascading Style Sheets\r\nHTML = Hyper Text Markup Language\r\nPHP = PHP Hypertext Preprocessor\r\nSQL = Structured Query Language\r\nSVG = Scalable Vector Graphics\r\nXML = EXtensible Markup Language\r\n\r\n\r\n\r\nModes->Description\r\nr->Open a file for read only. File pointer starts at the beginning of the file\r\nw->Open a file for write only. Erases the contents of the file or creates a new file if it\r\n doesn\"t exist.File pointer starts at the beginning of the file\r\na->Open a file for write only. The existing data in file is preserved. \r\nFile pointer starts at the end of the file. Creates a new file if the file doesn\"t exist\r\nx->Creates a new file for write only. Returns FALSE and an error if file already exists\r\nr+->Open a file for read/write. File pointer starts at the beginning of the file\r\nw+->Open a file for read/write. Erases the contents of the file or\r\n creates a new file if it doesn\"t exist. File pointer starts at the beginning of the file\r\na+->Open a file for read/write. The existing data in file is preserved. \r\nFile pointer starts at the end of the file. Creates a new file if the file doesn\"t exist\r\nx+->Creates a new file for read/write. Returns FALSE and an error if file already exists\r\n\r\n\r\n <?php\r\n$myfile = fopen(\"webdictionary.txt\", \"r\") or die(\"Unable to open file!\");\r\necho fgets($myfile); // for Read Single Line - fgets()\r\nfclose($myfile);\r\n?> \r\n\r\noutput:\r\nAJAX = Asynchronous JavaScript and XML \r\n\r\n\r\n//The feof() function checks if the \"end-of-file\" (EOF) has been reached.\r\n//The feof() function is useful for looping through data of unknown length.\r\n\r\n <?php\r\n$myfile = fopen(\"webdictionary.txt\", \"r\") or die(\"Unable to open file!\");\r\n// Output one line until end-of-file\r\nwhile(!feof($myfile)) {\r\n  echo fgets($myfile) . \"<br>\";\r\n}\r\nfclose($myfile);\r\n?> \r\n\r\n\r\noutput:\r\n\r\n\r\nAJAX = Asynchronous JavaScript and XML\r\nCSS = Cascading Style Sheets\r\nHTML = Hyper Text Markup Language\r\nPHP = PHP Hypertext Preprocessor\r\nSQL = Structured Query Language\r\nSVG = Scalable Vector Graphics\r\nXML = EXtensible Markup Language\r\n\r\n\r\n//The fgetc() function is used to read a single character from a file.\r\n//The example below reads the \"webdictionary.txt\" file character by character,\r\n// until end-of-file is reached:\r\n\r\n\r\n <?php\r\n$myfile = fopen(\"webdictionary.txt\", \"r\") or die(\"Unable to open file!\");\r\n// Output one character until end-of-file\r\nwhile(!feof($myfile)) {\r\n  echo fgetc($myfile);\r\n}\r\nfclose($myfile);\r\n?> \r\n\r\noutput: \r\n\r\n\r\nAJAX = Asynchronous JavaScript and XML CSS = Cascading Style Sheets HTML = Hyper Text Markup Language \r\nPHP = PHP Hypertext Preprocessor SQL = Structured Query Language SVG = Scalable Vector Graphics \r\nXML = EXtensible Markup Language \r\n\r\n', 26, '2023-09-29 18:25:11'),
(30, 'PHP File Create/Write', ' <?php\r\n// fopen() function with w that mean is created or open for write in\r\n$myfile = fopen(\"newfile.txt\", \"w\") or die(\"Unable to open file!\");\r\n// write $txt in single line using \r\n\r\n$txt = \"John Doe\r\n\";\r\nfwrite($myfile, $txt); // write in\r\n$txt = \"Jane Doe\r\n\";\r\nfwrite($myfile, $txt); // write in \r\nfclose($myfile);  // close file\r\n?> \r\n\r\n\r\noutput: \r\n\r\n//newfile.txt\r\n\r\n\r\nJohn Doe\r\nJane Doe\r\n\r\n// if we do it again we will lost all data file that \r\nhas in before because that happened \"w\" \r\n\r\n\r\nAppend Text\r\n\r\njust change \"w\" to \"a\" in this line\r\n$myfile = fopen(\"newfile.txt\", \"a\") or die(\"Unable to open file!\");\r\n\r\n\r\n\r\n\r\n', 26, '2023-09-29 18:39:35'),
(32, 'Changing img.src Using Array and randem() Function Using Javascript (Slider)', '// index.html\r\n\r\n\r\n<div class=\"box\">\r\n        <img id=\"imagen\" src=\"1.jpeg\" alt=\"image1\">\r\n        <button id=\"btn\" onclick=\"cambiar()\">Cambiar</button>\r\n</div>\r\n\r\n\r\n// style.css\r\n\r\n.box{\r\n    width: 80%;\r\n    height: 80vh;\r\n    margin: 10vh 10%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n#btn{\r\n    padding: 10px;\r\n    margin: 20px;\r\n}\r\nimg{\r\n    margin: 10px;\r\n}\r\n\r\n\r\n// javascript.js\r\n\r\nfunction cambiar() {\r\n     // select image that will be changed\r\n    var image =document.getElementById(\"imagen\"); \r\n     // array of Path url img \r\n    const array = [\"1.jpeg\", \"2.jpeg\", \"3.jpeg\", \"4.jpeg\", \"5.jpeg\"]; \r\n    image.src = array[Math.floor(Math.random() * array.length)];\r\n\r\n}\r\nThe Math.floor() function returns the largest integer \r\nless than or equal to a given number. \r\nThe Math.random() function returns a random number between 0 and 1.\r\nThe code Math.floor(Math.random() * array.length) \r\nwill generate a random index between 0 and array.length - 1. \r\nThis means that it will generate a random index that corresponds\r\n to one of the elements in the array array.\r\n', 38, '2023-09-29 20:10:32'),
(34, 'Apend Any Tag to Father element html Using Javascript', '// index.html\r\n<body>\r\n    <input type=\"text\"  name=\"a\" id=\"text\" placeholder=\"text\">\r\n    <input type=\"text\" name=\"v\" id=\"tag\" placeholder=\"tag\">\r\n    <button id=\"btn\" onclick=\"anadir()\"> Añadir Parrafo</button>\r\n    <div id=\"padre\">\r\n\r\n    </div>\r\n</body>\r\n// javascript.js\r\n\r\n\r\nfunction anadir() {\r\n    var tag = document.querySelector(\"#tag\").value;\r\n    var text = document.querySelector(\"#text\").value\r\n    const div = document.querySelector(\"#padre\");\r\n    const paragraph = document.createElement(tag);\r\n    paragraph.textContent = text;\r\n    div.appendChild(paragraph);\r\n}', 38, '2023-09-29 20:43:25'),
(36, 'The match() function in JavaScript', 'The match() function in JavaScript is used\r\n to search for a match for a regular expression in a string. \r\nIt returns an array of matches, or null if no match is found.\r\n\r\nThe match() function takes two arguments:\r\n\r\n    The string to be searched.\r\n    The regular expression to search for.\r\n\r\nFor example, the following code will search for \r\nthe match for the regular expression /a/ \r\nin the string \"hello\":\r\nJavaScript\r\n\r\nconst string = \"hello\";\r\nconst regex = /a/;   // letter \"a\" \r\nconst match = string.match(regex);   search for a in string\r\n\r\nif (match) {\r\n   // show the index\r\n  console.log(\"The match was found at index\", match.index);  \r\n} else {\r\n  console.log(\"The match was not found.\");\r\n}\r\n\r\n\r\n\r\n', 38, '2023-09-29 21:00:34'),
(37, 'Print All data from Request in one line', '//XML pom\r\n\r\n<dependency>\r\n  <groupId>org.apache.commons.io</groupId>\r\n  <artifactId>commons-io</artifactId>\r\n  <version>2.8.0</version>\r\n</dependency>\r\n\r\n// method goGet in function  processRequest()\r\n\r\nPrintWriter out = response.getWriter();\r\nString requestData = IOUtils.toString(request.getInputStream());\r\nout.println(requestData);', 50, '2023-09-30 16:38:41'),
(39, 'Get data By Parameters from Request', '<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n        <title>JSP Page</title>\r\n        <style>\r\n            *{\r\n                color: <% out.println(request.getParameter(\"color\")); %>\r\n            }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <h1>\r\n            <%\r\n                out.println( \"name: \"+request.getParameter(\"name\"));\r\n            \r\n            %>\r\n        </h1>\r\n        <h2>\r\n          <% out.println(\"last name :\"+request.getParameter(\"last_name\")); %>\r\n        </h2>\r\n    </body>\r\n</html>', 50, '2023-09-30 19:13:45'),
(43, 'Configuration of web.xml file insite To Defined Espicial Page Home', 'WEB-Pages -> WEB-INF -> web.xml \r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\r\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n   xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \r\nhttp://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\r\n   version=\"4.0\">\r\n    <session-config>\r\n        <session-timeout>\r\n            60\r\n        </session-timeout>\r\n    </session-config>\r\n    <display-name>Home</display-name> // name of title\r\n    <welcome-file-list>\r\n        <welcome-file>\r\n            /WEB-INF/views/Home.jsp   // path of Home page\r\n        </welcome-file>\r\n    </welcome-file-list>\r\n</web-app>\r\n', 50, '2023-09-30 19:26:55'),
(44, 'Link a Servlet urlPatterns with template jsp file By request.getRequestDispatcher(\"Path.jsp\").forward(request, response)', '// in servlet file\r\n\r\nprotected void processRequest\r\n             (HttpServletRequest request, HttpServletResponse response)\r\n throws ServletException, IOException {\r\n  // Path of file Template\r\n  request.getRequestDispatcher(\"/WEB-INF/views/loginOrSign.jsp\")\r\n     .forward(request, response);\r\n            ', 50, '2023-09-30 19:27:50'),
(45, 'Java Classes/Objects', 'Create an object called \"myObj\" and print the value of x:\r\n\r\npublic class Main {\r\n  int x = 5;\r\n\r\n  public static void main(String[] args) {\r\n    Main myObj = new Main();\r\n    System.out.println(myObj.x);\r\n  }\r\n}', 50, '2023-09-30 20:38:29'),
(46, 'Java Class Attributes', 'Example\r\n\r\nSet the value of x to 40:\r\n\r\npublic class Main {\r\n  int x; // if we put final int x;(1)\r\n\r\n  public static void main(String[] args) {\r\n    Main myObj = new Main();\r\n    // (1) will generate the error we can\"t change final value\r\n    myObj.x = 40; \r\n\r\n    System.out.println(myObj.x);\r\n  }\r\n}', 50, '2023-09-30 20:42:31'),
(47, 'Java Class Methods (Static vs. Public)', 'Example\r\n\r\nAn example to demonstrate the differences between static and public methods:\r\n\r\npublic class Main {\r\n  // Static method\r\n  static void myStaticMethod() {\r\n    System.out.println(\"Static methods can be called without creating objects\");\r\n  }\r\n\r\n  // Public method\r\n  public void myPublicMethod() {\r\n    System.out.println(\"Public methods must be called by creating objects\");\r\n  }\r\n\r\n  // Main method\r\n  public static void main(String[] args) {\r\n    myStaticMethod(); // Call the static method\r\n    // myPublicMethod(); This would compile an error\r\n\r\n    Main myObj = new Main(); // Create an object of Main\r\n    myObj.myPublicMethod(); // Call the public method on the object\r\n  }\r\n}', 50, '2023-09-30 20:44:53'),
(48, 'Java Constructors', '\r\n\r\nA constructor in Java is a special method that is used to initialize objects.\r\n The constructor is called when an object of a class is created.\r\n It can be used to set initial values for object attributes:\r\n\r\nExample\r\nGet your own Java Server\r\n\r\nCreate a constructor:\r\n\r\n// Create a Main class\r\npublic class Main {\r\n  int x;  // Create a class attribute\r\n\r\n  // Create a class constructor for the Main class\r\n  public Main() {\r\n    x = 5;  // Set the initial value for the class attribute x\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    // Create an object of class Main (This will call the constructor)\r\n    Main myObj = new Main(); \r\n    System.out.println(myObj.x); // Print the value of x\r\n  }\r\n}\r\n\r\n// Outputs 5', 50, '2023-09-30 20:49:15'),
(49, 'Encapsulation, is to make sure that \"sensitive\" data is hidden from users. (det and set , private)', 'The meaning of Encapsulation, \r\nis to make sure that \"sensitive\" data is hidden from users. \r\nTo achieve this, you must:\r\n\r\ndeclare class variables/attributes as private\r\nprovide public get and set methods to access and \r\nupdate the value of a private variable\r\n\r\n\r\nGet and Set\r\n\r\nYou learned from the previous chapter that private variables \r\ncan only be accessed within the same class (an outside class has no access to it).\r\n However, it is possible to access them if we provide public get and set methods.\r\n\r\nThe get method returns the variable value, and the set method sets the value.\r\n\r\nSyntax for both is that they start with either get or set,\r\n followed by the name of the variable, with the first letter in upper case:\r\n\r\nExample\r\nGet your own Java Server\r\n\r\npublic class Person {\r\n  private String name; // private = restricted access\r\n\r\n  // Getter\r\n  public String getName() {\r\n    return name;\r\n  }\r\n\r\n  // Setter\r\n  public void setName(String newName) {\r\n    this.name = newName;\r\n  }\r\n}\r\n\r\n', 50, '2023-09-30 20:59:14'),
(50, 'Java Inheritance (Subclass and Superclass)', 'in Java, it is possible\r\n to inherit attributes and methods from one class to another. \r\nWe group the \"inheritance concept\" into two categories:\r\n\r\n    subclass (child) - the class that inherits from another class\r\n    superclass (parent) - the class being inherited from\r\n\r\nTo inherit from a class, use the extends keyword.\r\n\r\nIn the example below, the Car class (subclass) inherits \r\nthe attributes and methods from the Vehicle class (superclass):\r\nExample\r\nGet your own Java Server\r\n\r\nclass Vehicle {\r\n  protected String brand = \"Ford\";        // Vehicle attribute\r\n  public void honk() {                    // Vehicle method\r\n    System.out.println(\"Tuut, tuut!\");\r\n  }\r\n}\r\n\r\nclass Car extends Vehicle {\r\n  private String modelName = \"Mustang\";    // Car attribute\r\n  public static void main(String[] args) {\r\n\r\n    // Create a myCar object\r\n    Car myCar = new Car();\r\n\r\n    // Call the honk() method (from the Vehicle class) on the myCar object\r\n    myCar.honk();\r\n\r\n    // Display the value of the brand attribute \r\n//(from the Vehicle class) and the value of the modelName from the Car class\r\n    System.out.println(myCar.brand + \" \" + myCar.modelName);\r\n  }\r\n}', 50, '2023-09-30 21:02:58'),
(51, 'Polymorphism means \"many forms\", and it occurs when we have many classes ', 'Polymorphism means \"many forms\", \r\nand it occurs when we have many classes that are related \r\nto each other by inheritance.\r\n\r\nLike we specified in the previous chapter; \r\nInheritance lets us inherit attributes and methods from another class. \r\nPolymorphism uses those methods to perform different tasks. \r\nThis allows us to perform a single action in different ways.\r\n\r\nFor example, \r\nthink of a superclass called Animal that has a method called animalSound(). \r\nSubclasses of Animals could be Pigs, Cats, Dogs, Birds - \r\nAnd they also have their own implementation of an animal sound \r\n(the pig oinks, and the cat meows, etc.):\r\n\r\n\r\n\r\nclass Animal {\r\n  public void animalSound() {\r\n    System.out.println(\"The animal makes a sound\");\r\n  }\r\n}\r\n\r\nclass Pig extends Animal {\r\n  public void animalSound() {\r\n    System.out.println(\"The pig says: wee wee\");\r\n  }\r\n}\r\n\r\nclass Dog extends Animal {\r\n  public void animalSound() {\r\n    System.out.println(\"The dog says: bow wow\");\r\n  }\r\n}\r\n\r\nclass Main {\r\n  public static void main(String[] args) {\r\n    Animal myAnimal = new Animal();  // Create a Animal object\r\n    Animal myPig = new Pig();  // Create a Pig object\r\n    Animal myDog = new Dog();  // Create a Dog object\r\n    myAnimal.animalSound();\r\n    myPig.animalSound();\r\n    myDog.animalSound();\r\n  }\r\n}\r\n', 50, '2023-09-30 21:09:15'),
(52, 'Java Inner Classes Class Inside The Other', 'In Java, it is also possible to nest classes (a class within a class).\r\n The purpose of nested classes is to group classes that belong together, \r\nwhich makes your code more readable and maintainable.\r\n\r\nTo access the inner class, create an object of the outer class,\r\n and then create an object of the inner class:\r\n\r\nExample\r\n\r\n\r\nclass OuterClass {\r\n  int x = 10;\r\n\r\n  class InnerClass {\r\n    int y = 5;\r\n  }\r\n}\r\n\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n    OuterClass myOuter = new OuterClass();\r\n    OuterClass.InnerClass myInner = myOuter.new InnerClass();\r\n    System.out.println(myInner.y + myOuter.x);\r\n  }\r\n}\r\n\r\n// Outputs 15 (5 + 10)', 50, '2023-09-30 21:17:00'),
(53, 'Java Abstraction (Abstract Classes and Methods)', 'Data abstraction is the process of hiding certain details and \r\nshowing only essential information to the user.\r\nAbstraction can be achieved with either abstract classes or interfaces \r\n(which you will learn more about in the next chapter).\r\n\r\nThe abstract keyword is a non-access modifier, used for classes and methods:\r\n\r\n    Abstract class: is a restricted class that cannot be used to create objects \r\n(to access it, it must be inherited from another class).\r\n\r\n    Abstract method: can only be used in an abstract class,\r\n and it does not have a body. \r\nThe body is provided by the subclass (inherited from).\r\n\r\nAn abstract class can have both abstract and regular methods:\r\n\r\n\r\n/ Abstract class\r\nabstract class Animal {\r\n  // Abstract method (does not have a body)\r\n  public abstract void animalSound();\r\n  // Regular method\r\n  public void sleep() {\r\n    System.out.println(\"Zzz\");\r\n  }\r\n}\r\n\r\n// Subclass (inherit from Animal)\r\nclass Pig extends Animal {\r\n  public void animalSound() {\r\n    // The body of animalSound() is provided here\r\n    System.out.println(\"The pig says: wee wee\");\r\n  }\r\n}\r\n\r\nclass Main {\r\n  public static void main(String[] args) {\r\n    Pig myPig = new Pig(); // Create a Pig object\r\n    myPig.animalSound();\r\n    myPig.sleep();\r\n  }\r\n}', 50, '2023-09-30 22:05:21'),
(54, 'Formatting Date and Time', '\r\nThe \"T\" in the example above is used to separate the date from the time. \r\nYou can use the DateTimeFormatter class with the ofPattern() \r\nmethod in the same package to format or parse date-time objects. \r\nThe following example will remove both the \"T\" and \r\nnanoseconds from the date-time:\r\n\r\nExample\r\n\r\nimport java.time.LocalDateTime; // Import the LocalDateTime class\r\nimport java.time.format.DateTimeFormatter; // Import the DateTimeFormatter class\r\n\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n    LocalDateTime myDateObj = LocalDateTime.now();\r\n    System.out.println(\"Before formatting: \" + myDateObj);\r\n    DateTimeFormatter myFormatObj ;\r\n    myFormatObj= DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\");\r\n\r\n    String formattedDate = myDateObj.format(myFormatObj);\r\n    System.out.println(\"After formatting: \" + formattedDate);\r\n  }\r\n}\r\n\r\n\r\nThe output will be:\r\nBefore Formatting: 2023-09-30T22:14:16.922745\r\nAfter Formatting: 30-09-2023 22:14:16 \r\n\r\n\r\n\r\n\r\n\r\nThe ofPattern() method accepts all sorts of values, \r\nif you want to display the date and time in a different format. \r\nFor example:\r\nValue 	Example 	\r\nyyyy-MM-dd 	\"1988-09-29\" 	\r\ndd/MM/yyyy 	\"29/09/1988\" 	\r\ndd-MMM-yyyy 	\"29-Sep-1988\" 	\r\nE, MMM dd yyyy 	\"Thu, Sep 29 1988\"', 50, '2023-09-30 22:40:09'),
(55, 'Java ArrayList', 'Create an ArrayList object called cars that will store strings:\r\n\r\nimport java.util.ArrayList; // import the ArrayList class\r\n\r\n// Create an ArrayList object\r\nArrayList<String> cars = new ArrayList<String>(); \r\n\r\n//Add Items\r\n\r\n\r\ncars.add(\"Volvo\");\r\ncars.add(\"BMW\");\r\n\r\n\r\n// Access an Item\r\n\r\ncars.get(0);\r\n\r\n// Modify an Item\r\n\r\n\r\ncars.set(0, \"Opel\"); // new value\r\n\r\n// Remove an Item\r\n\r\ncars.remove(0);\r\n\r\n\r\n// remove all the elements or clean it\r\n\r\nars.clear();\r\n\r\n// ArrayList Size\r\n\r\nars.size();\r\n\r\n\r\n// loop (for)\r\n\r\nfor (int i = 0; i < cars.size(); i++) {\r\n      System.out.println(cars.get(i));\r\n    }\r\n\r\n// loop for-each\r\n\r\nfor (String i : cars) {\r\n      System.out.println(i);\r\n    }\r\n\r\n// Sort an ArrayList\r\nimport java.util.Collections;\r\nCollections.sort(cars); \r\n\r\n\r\n\r\n\r\n\r\n', 50, '2023-09-30 23:23:13'),
(56, 'Java HashMap (use string like key number in arraylist (string, string))', 'One object is used as a key (index) to another object (value). \r\nIt can store different types: String keys and Integer values,\r\n or the same type, like: String keys and String values:\r\nExample\r\n\r\n\r\n// Create a HashMap object called capitalCities \r\n// that will store String keys and String values:\r\n\r\nimport java.util.HashMap; // import the HashMap class\r\n// the key will be a string like country with a capital city\r\nHashMap<String, String> capitalCities = new HashMap<String, String>();\r\n\r\n//Add Items\r\n\r\n\r\n   // Add keys and values (Country, City)\r\n    capitalCities.put(\"England\", \"London\");\r\n    capitalCities.put(\"Germany\", \"Berlin\");\r\n    capitalCities.put(\"Norway\", \"Oslo\");\r\n    capitalCities.put(\"USA\", \"Washington DC\");\r\n\r\n// Access an Item\r\n\r\ncapitalCities.get(\"England\");\r\n\r\n\r\n\r\n// Remove an Item\r\n\r\ncapitalCities.remove(\"England\");\r\n\r\n// remove all items\r\n\r\ncapitalCities.clear();\r\n\r\n\r\n// HashMap Size\r\n\r\ncapitalCities.size();\r\n\r\n// loop for-each Print keys\r\n\r\n\r\nfor (String i : capitalCities.keySet()) {\r\n  System.out.println(i);\r\n}\r\n\r\n// Print values\r\nfor (String i : capitalCities.values()) {\r\n  System.out.println(i);\r\n}\r\n\r\n\r\n// Print keys and values\r\nfor (String i : capitalCities.keySet()) {\r\n  System.out.println(\"key: \" + i + \" value: \" + capitalCities.get(i));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n', 50, '2023-09-30 23:35:46'),
(57, 'Java HashSet it\"t like arraylist but is for Collection and search in it', '\r\nExample\r\n\r\n\r\nCreate a HashSet object called cars that will store strings:\r\n\r\nimport java.util.HashSet; // Import the HashSet class\r\n\r\nHashSet<String> cars = new HashSet<String>();\r\n\r\n//Add Items\r\n\r\ncars.add(\"Volvo\");\r\n    cars.add(\"BMW\");\r\n    cars.add(\"Ford\");\r\n\r\n\r\n// Check If an Item Exists by content\r\n\r\ncars.contains(\"Mazda\");\r\n\r\n// remove item by content\r\n\r\ncars.remove(\"Volvo\");\r\n\r\n// clean\r\n\r\ncars.clear();\r\n', 50, '2023-09-30 23:41:04'),
(58, 'Java Iterator it like ArrayList but more usefull for loop and get data', '//Getting an Iterator\r\n\r\n\r\nThe iterator() method can be used to get an Iterator for any collection:\r\nExample\r\nGet your own Java Server\r\n\r\n// Import the ArrayList class and the Iterator class\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\n\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n\r\n    // Make a collection\r\n    ArrayList<String> cars = new ArrayList<String>();\r\n    cars.add(\"Volvo\");\r\n    cars.add(\"BMW\");\r\n    cars.add(\"Ford\");\r\n    cars.add(\"Mazda\");\r\n\r\n    // Get the iterator\r\n    Iterator<String> it = cars.iterator();\r\n\r\n    // Print the first item\r\n    System.out.println(it.next());\r\n  }\r\n}\r\n\r\n// Looping Through a Collection\r\n\r\nTo loop through a collection, \r\nuse the hasNext() and next() methods of the Iterator:\r\nExample\r\n\r\nwhile(it.hasNext()) {\r\n  System.out.println(it.next());\r\n}\r\n\r\n// Removing Items from a Collection\r\n\r\nwhile(it.hasNext()) {\r\n      Integer i = it.next();\r\n      if(i < 10) {\r\n        it.remove();\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n', 50, '2023-09-30 23:50:22'),
(59, 'Java Exceptions - Try...Catch', 'try {\r\n      int[] myNumbers = {1, 2, 3};\r\n      System.out.println(myNumbers[10]);\r\n    } catch (Exception e) {\r\n      System.out.println(\"Something went wrong.\");\r\n    } finally {\r\n      System.out.println(\"The \'try catch\' is finished.\");\r\n    }\r\n\r\n\r\nExample\r\n\r\nThrow an exception if age is below 18 (print \"Access denied\"). \r\nIf age is 18 or older, print \"Access granted\":\r\n\r\npublic class Main {\r\n  static void checkAge(int age) {\r\n    if (age < 18) {\r\n      String x=\"Access denied - You must be at least 18 years old.\"; \r\n      throw new ArithmeticException(x);\r\n    }\r\n    else {\r\n      System.out.println(\"Access granted - You are old enough!\");\r\n    }\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    checkAge(15); // Set age to 15 (which is below 18...)\r\n  }\r\n}\r\n\r\noutput ;\r\nAccess denied - You must be at least 18 years old\r\n\r\n\r\n', 50, '2023-09-30 23:57:14'),
(61, 'Redirect Data To jsp File From servlet', 'protected void \r\nprocessRequest(HttpServletRequest request, HttpServletResponse response)\r\n  throws ServletException, IOException {\r\n  String color=request.getParameter(\"color\");\r\n  // to set a new variable that we can call it in jsp we do that \r\n\r\n  request.setAttribute(\"micolor\", color);\r\n  //------------------------------------\r\n  request.getRequestDispatcher(\"/WEB-INF/views/loginOrSign.jsp\")\r\n       .forward(request, response);\r\n            \r\n                \r\n// to call it in jsp we do that \r\n\r\n\r\n<%= request.getAttribute(\"micolor\") %>', 50, '2023-10-02 17:30:26'),
(62, 'remove name project From http://localhost:8080/\"\"mavenproject1\"\"/Login', '\r\n\r\n// we go to META-INF\r\n\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n// WE CAN CHANGE IT FROM THAT ATTRIBUTE \"\"path\"\" \r\n<Context path=\"/mavenproject1\"/>\r\n// to like that \r\n\r\n<Context path=\"/\"/>\r\n', 50, '2023-10-02 17:33:26'),
(63, 'All important meta tag should be in page', '\r\n    <meta charset=\"utf-8\"> \r\n    <meta name=\"description\" content=\"......\"> \r\n    <meta name=\"keywords\" content=\"...\"> \r\n    <meta name=\"author\" content=\"yo\"> ;)\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> \r\n    <meta http-equiv=\"refresh\" content=\"X\"> ', 38, '2023-10-02 18:33:12'),
(64, 'Import package from jsp file', '// date\r\n<%@page import=\"java.util.Date\" %>\r\n\r\n// \r\n\r\n<% Date a = new Date() %>\r\n\r\n', 50, '2023-10-03 12:16:42'),
(65, 'JavaScript Display Possibilities', 'JavaScript can \"display\" data in different ways:\r\n\r\n    Writing into an HTML element, using innerHTML.\r\n    Writing into the HTML output using document.write().\r\n    Writing into an alert box, using window.alert().\r\n    Writing into the browser console, using console.log().\r\n', 38, '2023-10-07 19:17:55'),
(66, 'JavaScript Objects', 'Objects are variables too. But objects can contain many values.\r\n\r\nThis code assigns many values (Fiat, 500, white) to\r\n a variable named car:\r\n\r\nconst car = {type:\"Fiat\", model:\"500\", color:\"white\"};\r\n\r\nconst person = {\r\n  firstName: \"John\",\r\n  lastName: \"Doe\",\r\n  age: 50,\r\n  eyeColor: \"blue\"\r\n};\r\n\r\n//Accessing Object Properties\r\n//You can access object properties in two ways:\r\n\r\nobjectName.propertyName\r\nor\r\nobjectName[\"propertyName\"]\r\n\r\n\r\n// Object Methods\r\n\r\nconst person = {\r\n  firstName: \"John\",\r\n  lastName : \"Doe\",\r\n  id       : 5566,\r\n  fullName : function() {\r\n    return this.firstName + \" \" + this.lastName;\r\n  }\r\n};\r\n\r\n// the example above, this refers to the person object.\r\n//I.E. this.firstName means the firstName property of this.\r\n//I.E. this.firstName means the firstName property of person.\r\n// Accessing Object Methods\r\n// You access an object method with the following syntax:\r\n\r\nobjectName.methodName()\r\n\r\n//Example\r\n\r\nname = person.fullName();', 38, '2023-10-07 19:28:46'),
(67, 'JavaScript Events', 'HTML allows event handler attributes, with JavaScript code\r\nto be added to HTML elements.\r\nWith single quotes:\r\n\r\n<element event=\"some JavaScript\">\r\n\r\nWith double quotes:\r\n\r\n<element event=\"some JavaScript\">\r\n\r\nIn the following example, an onclick attribute (with code), \r\nis added to a <button> element:\r\n\r\nExample\r\n\r\n<button onclick=\"document.getElementById(\"demo\").innerHTML = Date()\">\r\nThe time is?</button>\r\n\r\nCommon HTML Events\r\n\r\nHere is a list of some common HTML events:\r\nEvent 	Description\r\nonchange 	An HTML element has been changed\r\nonclick 	The user clicks an HTML element\r\nonmouseover 	The user moves the mouse over an HTML element\r\nonmouseout 	The user moves the mouse away from an HTML element\r\nonkeydown 	The user pushes a keyboard key\r\nonload 	The browser has finished loading the page', 38, '2023-10-07 19:32:48'),
(68, 'JavaScript String Methods', '// String length // to get length of string\r\n// String slice() //The sliced (extracted) part of the string\r\n// String substring() // similar a slice\r\n// String substr()  // similar a slice\r\n// String replace() \r\n\r\nlet text = \"Please visit Microsoft!\";\r\nlet newText = text.replace(/MICROSOFT/i, \"W3Schools\");\r\n\r\noutput:       Please visit W3Schools!\r\n\r\nlet text = \"Please visit Microsoft and Microsoft!\";\r\nlet newText = text.replace(/Microsoft/g, \"W3Schools\");\r\n\r\noutput:       Please visit W3Schools and W3Schools!\r\n\r\n// String replaceAll()\r\n\r\n\r\n\r\nlet text = \"I love cats. Cats are very easy to love. Cats are very popular.\"\r\ntext = text.replaceAll(\"Cats\",\"Dogs\");\r\ntext = text.replaceAll(\"cats\",\"dogs\");\r\n\r\noutput: \r\nI love dogs. Dogs are very easy to love. Dogs are very popular.\r\n\r\n\r\n\r\n\r\n// String toUpperCase()\r\n// String toLowerCase()\r\n// String concat()\r\n\r\n\r\nlet text1 = \"Hello\";\r\nlet text2 = \"World\";\r\nlet text3 = text1.concat(\" \", text2);\r\n\r\n\r\n// String trim()\r\n// String trimStart()\r\n// String trimEnd()\r\n// String padStart()\r\n\r\nPad a string with \"0\" until it reaches the length 4:\r\nlet text = \"5\";\r\nlet padded = text.padStart(4,\"0\");\r\n\r\noutput:\r\n0005\r\n\r\n// String padEnd()\r\n\r\nlet text = \"5\";\r\ntext = text.padEnd(4,\"0\");\r\n\r\noutput:\r\n5000\r\n// String charAt()\r\n\r\n// The charAt() method returns the character at a specified index (position) in a string:\r\n// Example\r\nlet text = \"HELLO WORLD\";\r\nlet char = text.charAt(0);\r\n\r\noutput: H\r\n// String charCodeAt()\r\n\r\nhe charCodeAt() method returns the unicode of the character at a specified index in a string:\r\n\r\nThe method returns a UTF-16 code (an integer between 0 and 65535).\r\nExample\r\nlet text = \"HELLO WORLD\";\r\nlet char = text.charCodeAt(0);\r\n\r\noutput:\r\n72\r\n\r\n\r\n// String split()\r\n\r\ntext.split(\",\")    // Split on commas\r\ntext.split(\" \")    // Split on spaces\r\ntext.split(\"|\")    // Split on pipe \r\n', 38, '2023-10-07 19:58:56'),
(69, 'String Search Methods', '\r\n    // String indexOf()\r\n\r\n\r\n// The indexOf() method returns the position of \r\nthe first occurrence of a string in a string.\r\nlet text = \"Please locate where \'locate\' occurs!\";\r\nlet index = text.indexOf(\"locate\");\r\noutput:\r\n7\r\n\r\n\r\n    // String lastIndexOf()\r\n\r\nThe lastIndexOf() method returns the index of\r\n the last occurrence of a specified text in a string:\r\nExample\r\nlet text = \"Please locate where \'locate\' occurs!\";\r\nlet index = text.lastIndexOf(\"locate\");\r\n\r\nBoth indexOf(), and lastIndexOf() return -1 if the text is not found:\r\n\r\n    // String search()\r\n\r\nThe search() method searches a string for a string\r\n (or a regular expression) and returns the position of the match:\r\nExamples\r\nlet text = \"Please locate where \'locate\' occurs!\";\r\ntext.search(\"locate\");\r\noutput: 7\r\n\r\nlet text = \"Please locate where \'locate\' occurs!\";\r\ntext.search(/locate/);\r\noutput: 7\r\n\r\n    // String match()\r\n\r\nPerform a search for \"ain\":\r\nlet text = \"The rain in SPAIN stays mainly in the plain\";\r\ntext.match(\"ain\");\r\n\r\noutput: aim\r\n    // String matchAll()\r\n\r\nlet text = \"I love cats. Cats are very easy to love. Cats are very popular.\"\r\nconst iterator = text.matchAll(\"Cats\");\r\n\r\noutput:Cats,Cats\r\n\r\n\r\n    // String includes()\r\n\r\nCheck if a string includes \"world\":\r\nlet text = \"Hello world, welcome to the universe.\";\r\ntext.includes(\"world\");\r\n   output:\r\ntrue\r\n\r\n\r\n\r\n    // String startsWith()\r\nlet text = \"Hello world, welcome to the universe.\";\r\ndocument.getElementById(\"demo\").innerHTML = text.startsWith(\"Hello\");\r\noutput: true\r\n\r\n\r\n\r\n    // String endsWith()\r\nlet text = \"John Doe\";\r\ndocument.getElementById(\"demo\").innerHTML = text.endsWith(\"Doe\");\r\noutput : true\r\n\r\n\r\nlet text = \"Hello world, welcome to the universe.\";\r\ndocument.getElementById(\"demo\").innerHTML = text.endsWith(\"world\", 11);\r\n\r\noutput : true', 38, '2023-10-07 20:33:17'),
(70, 'JavaScript Template Literals', 'let firstName = \"John\";\r\nlet lastName = \"Doe\";\r\n\r\nlet text = `Welcome ${firstName}, ${lastName}!`;\r\n\r\n\r\nlet header = \"Templates Literals\";\r\nlet tags = [\"template literals\", \"javascript\", \"es6\"];\r\n\r\nlet html = `<h2>${header}</h2><ul>`;\r\nfor (const x of tags) {\r\n  html += `<li>${x}</li>`;\r\n}\r\n\r\nhtml += `</ul>`;\r\n\r\n\r\n', 38, '2023-10-07 20:36:13'),
(71, 'Exponentiation perators', 'x ** y   produces the same result as Math.pow(x,y):\r\n', 38, '2023-10-07 20:38:18'),
(72, 'Number Methods', 'The toFixed() Method\r\n\r\ntoFixed() returns a string, with the number written with a specified number of decimals:\r\nExample\r\nlet x = 9.656;\r\nx.toFixed(0);\r\nx.toFixed(2);\r\nx.toFixed(4);\r\nx.toFixed(6);\r\n\r\noutput:\r\n10\r\n9.66\r\n9.6560\r\n9.656000\r\n\r\n\r\nThe toPrecision() Method\r\n\r\ntoPrecision() returns a string, with a number written with a specified length:\r\nExample\r\nlet x = 9.656;\r\nx.toPrecision();\r\nx.toPrecision(2);\r\nx.toPrecision(4);\r\nx.toPrecision(6);\r\n\r\noutput:\r\n\r\n9.656\r\n9.7\r\n9.656\r\n9.65600\r\n\r\nThe Number() Method\r\n\r\nThe Number() method can be used to convert JavaScript variables to numbers:\r\nExample\r\nNumber(true);\r\nNumber(false);\r\nNumber(\"10\");\r\nNumber(\"  10\");\r\nNumber(\"10  \");\r\nNumber(\" 10  \");\r\nNumber(\"10.33\");\r\nNumber(\"10,33\");\r\nNumber(\"10 33\");\r\nNumber(\"John\");\r\n\r\n\r\noutput:\r\n\r\n1\r\n0\r\n10\r\n10\r\n10\r\n10\r\n10.33\r\nNaN\r\nNaN\r\nNaN\r\n\r\n\r\nThe Number.isInteger() Method\r\n\r\nThe Number.isInteger() method returns true if the argument is an integer.\r\nExample\r\nNumber.isInteger(10);\r\nNumber.isInteger(10.5);\r\n\r\noutput:\r\n\r\ntrue\r\nfalse\r\n\r\n\r\nThe Number.isSafeInteger() Method\r\n\r\nA safe integer is an integer that can be exactly represented as a double precision number.\r\n\r\nThe Number.isSafeInteger() method returns true if the argument is a safe integer.\r\nExample\r\nNumber.isSafeInteger(10);\r\nNumber.isSafeInteger(12345678901234567890);\r\n\r\noutput:\r\n\r\ntrue\r\nfalse\r\n', 38, '2023-10-07 20:46:12'),
(73, 'JavaScript Number Properties', 'Property 	Description\r\nEPSILON 	The difference between 1 and the smallest number > 1.\r\nMAX_VALUE 	The largest number possible in JavaScript\r\nMIN_VALUE 	The smallest number possible in JavaScript\r\nMAX_SAFE_INTEGER 	The maximum safe integer (253 - 1)\r\nMIN_SAFE_INTEGER 	The minimum safe integer -(253 - 1)\r\nPOSITIVE_INFINITY 	Infinity (returned on overflow)\r\nNEGATIVE_INFINITY 	Negative infinity (returned on overflow)\r\nNaN 	A \"Not-a-Number\" value', 38, '2023-10-07 20:46:59');
INSERT INTO `apuntes` (`id`, `nombre`, `apunte`, `tema_id`, `fecha`) VALUES
(74, 'JavaScript Array Methods', ' // Array length\r\n\r\nJavaScript Array length\r\n\r\nThe length property provides an easy way to append a new element to an array:\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits[fruits.length] = \"Kiwi\";\r\n\r\n\r\n// Array toString()\r\n\r\nJavaScript Array toString()\r\n\r\nThe JavaScript method toString() converts an array \r\nto a string of (comma separated) array values.\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\ndocument.getElementById(\"demo\").innerHTML = fruits.toString();\r\n\r\nResult:\r\nBanana,Orange,Apple,Mango\r\n\r\n\r\n// Array join()\r\n\r\n\r\n\r\nThe join() method also joins all array elements into a string.\r\n\r\nIt behaves just like toString(), but in addition you can specify the separator:\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\ndocument.getElementById(\"demo\").innerHTML = fruits.join(\" * \");\r\n\r\nResult:\r\nBanana * Orange * Apple * Mango\r\n\r\n\r\n\r\n//  Array push()\r\nJavaScript Array push()\r\n\r\nThe push() method adds a new element to an array (at the end):\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits.push(\"Kiwi\");\r\n\r\n\r\n// JavaScript Array pop()\r\n\r\nThe pop() method removes the last element from an array:\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits.pop();\r\nThe pop() method returns the value that was \"popped out\":\r\n\r\noutput:  \"Banana\", \"Orange\", \"Apple\"\r\n\r\n\r\n\r\n\r\n// Array shift()\r\n\r\nThe shift() method removes the first array element and \"shifts\" all other elements to a lower index.\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits.shift();\r\n\r\n\r\n// Array unshift()\r\n\r\nJavaScript Array unshift()\r\n\r\nThe unshift() method adds a new element to an array (at the beginning), and \"unshifts\" older elements:\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits.unshift(\"Lemon\");\r\n\r\n\r\n	\r\nArray delete()\r\n\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\ndelete fruits[0];\r\n\r\noutput fruits[0]=undefined\r\n\r\n\r\nArray concat()\r\n\r\n\r\nconst myGirls = [\"Cecilie\", \"Lone\"];\r\nconst myBoys = [\"Emil\", \"Tobias\", \"Linus\"];\r\n\r\nconst myChildren = myGirls.concat(myBoys);\r\n\r\noutput:\r\n\r\n\r\nCecilie,Lone,Emil,Tobias,Linus\r\n\r\n\r\nconst arr1 = [\"Cecilie\", \"Lone\"];\r\nconst arr2 = [\"Emil\", \"Tobias\", \"Linus\"];\r\nconst arr3 = [\"Robin\", \"Morgan\"];\r\nconst myChildren = arr1.concat(arr2, arr3);\r\n\r\noutput:\r\nCecilie,Lone,Emil,Tobias,Linus,Robin,Morgan\r\n\r\nThe concat() method can merge string values to arrays:\r\nconst myArray = [\"Emil\", \"Tobias\", \"Linus\"];\r\nconst myChildren = myArray.concat(\"Peter\"); \r\n\r\n\r\noutput: Emil,Tobias,Linus,Peter\r\n\r\nArray flat()\r\n\r\n\r\nFlattening an Array\r\n\r\nFlattening an array is the process of reducing the dimensionality of an array.\r\n\r\nThe flat() method creates a new array with sub-array elements concatenated to a specified depth.\r\nExample\r\nconst myArr = [[1,2],[3,4],[5,6]];\r\nconst newArr = myArr.flat();\r\n\r\noutput: 1,2,3,4,5,6\r\n\r\n\r\n\r\n// Array splice()\r\n\r\navaScript Array splice()\r\n\r\nThe splice() method can be used to add new items to an array:\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits.splice(2, 0, \"Lemon\", \"Kiwi\");\r\noutput: Banana,Orange,Lemon,Kiwi,Apple,Mango\r\nThe first parameter (2) defines the position \r\nwhere new elements should be added (spliced in).\r\nThe second parameter (0) defines how many elements should be removed.\r\n\r\n\r\nUsing splice() to Remove Elements\r\n\r\nWith clever parameter setting, you can use splice()\r\n to remove elements without leaving \"holes\" in the array:\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits.splice(0, 1);\r\n\r\nThe first parameter (0) defines the position \r\nwhere new elements should be added (spliced in).\r\nThe second parameter (1) defines how many elements should be removed.\r\n\r\nArray slice()', 38, '2023-10-07 21:08:00'),
(75, 'JavaScript Sorting Arrays', 'Sorting an Array\r\n\r\nThe sort() method sorts an array alphabetically:\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits.sort();\r\n\r\n\r\n\r\nReversing an Array\r\n\r\nThe reverse() method reverses the elements in an array.\r\n\r\nYou can use it to sort an array in descending order:\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nfruits.sort();\r\nfruits.reverse();\r\n\r\n\r\n\r\nNumeric Sort\r\n\r\nBy default, the sort() function sorts values as strings.\r\n\r\nThis works well for strings (\"Apple\" comes before \"Banana\").\r\n\r\nHowever, if numbers are sorted as strings, \"25\" is bigger than \"100\", because \"2\" is bigger than \"1\".\r\n\r\nBecause of this, the sort() method will produce incorrect result when sorting numbers.\r\n\r\nYou can fix this by providing a compare function:\r\nExample\r\nconst points = [40, 100, 1, 5, 25, 10];\r\npoints.sort(function(a, b){return a - b});\r\n\r\noutput:1,5,10,25,40,100\r\n\r\n\r\nSorting an Array in Random Order\r\nExample\r\nconst points = [40, 100, 1, 5, 25, 10];\r\npoints.sort(function(){return 0.5 - Math.random()});\r\n\r\n\r\n\r\nSorting Object Arrays\r\n\r\nJavaScript arrays often contain objects:\r\nExample\r\nconst cars = [\r\n  {type:\"Volvo\", year:2016},\r\n  {type:\"Saab\", year:2001},\r\n  {type:\"BMW\", year:2010}\r\n];\r\n\r\n\r\n\r\nEven if objects have properties of different data types,\r\n the sort() method can be used to sort the array.\r\n\r\nThe solution is to write a compare function to compare the property values:\r\nExample\r\ncars.sort(function(a, b){return a.year - b.year}); \r\n\r\noutput:\r\nSaab 2001\r\nBMW 2010\r\nVolvo 2016\r\n\r\n\r\n\r\n\r\nconst myArr = [\r\n  {name:\"X00\",price:100 },\r\n  {name:\"X01\",price:100 },\r\n  {name:\"X02\",price:100 },\r\n  {name:\"X03\",price:100 },\r\n  {name:\"X04\",price:110 },\r\n  {name:\"X05\",price:110 },\r\n  {name:\"X06\",price:110 },\r\n  {name:\"X07\",price:110 },\r\n  {name:\"X08\",price:120 },\r\n  {name:\"X09\",price:120 },\r\n  {name:\"X10\",price:120 },\r\n  {name:\"X11\",price:120 },\r\n  {name:\"X12\",price:130 },\r\n  {name:\"X13\",price:130 },\r\n  {name:\"X14\",price:130 },\r\n  {name:\"X15\",price:130 },\r\n  {name:\"X16\",price:140 },\r\n  {name:\"X17\",price:140 },\r\n  {name:\"X18\",price:140 },\r\n  {name:\"X19\",price:140 }\r\n];\r\n\r\nmyArr.sort( (p1, p2) => {\r\n  if (p1.price < p2.price) return -1;\r\n  if (p1.price > p2.price) return 1;\r\n  return 0;\r\n});\r\n\r\nlet txt = \"\";\r\nmyArr.forEach(myFunction);\r\n\r\nfunction myFunction(value) {\r\n  txt += value.name + \" \" + value.price + \"<br>\"; \r\n}\r\ndocument.getElementById(\"demo\").innerHTML = txt;\r\n\r\n\r\nX00 100\r\nX01 100\r\nX02 100\r\nX03 100\r\nX04 110\r\nX05 110\r\nX06 110\r\nX07 110\r\nX08 120\r\nX09 120\r\nX10 120\r\nX11 120\r\nX12 130\r\nX13 130\r\nX14 130\r\nX15 130\r\nX16 140\r\nX17 140\r\nX18 140\r\nX19 140\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 38, '2023-10-07 21:21:22'),
(76, 'JavaScript Array Iteration forEach()', 'JavaScript Array forEach()\r\n\r\nThe forEach() method calls a function \r\n(a callback function) once for each array element.\r\nExample\r\nconst numbers = [45, 4, 9, 16, 25];\r\nlet txt = \"\";\r\nnumbers.forEach(myFunction);\r\n\r\nfunction myFunction(value, index, array) {\r\n  txt += value + \"<br>\";\r\n}\r\n\r\n\r\nNote that the function takes 3 arguments:\r\n\r\n    The item value\r\n    The item index\r\n    The array itself\r\n\r\n\r\n\r\nJavaScript Array map()\r\n\r\nThe map() method creates a new array by performing a function on each array element.\r\n\r\nThe map() method does not execute the function for array elements without values.\r\n\r\nThe map() method does not change the original array.\r\n\r\nThis example multiplies each array value by 2:\r\nExample\r\nconst numbers1 = [45, 4, 9, 16, 25];\r\nconst numbers2 = numbers1.map(myFunction);\r\n\r\nfunction myFunction(value, index, array) {\r\n  return value * 2;\r\n}\r\n\r\n\r\nNote that the function takes 3 arguments:\r\n\r\n    The item value\r\n    The item index\r\n    The array itself\r\n\r\nWhen a callback function uses only the value parameter,\r\n the index and array parameters can be omitted: \r\n\r\n\r\nJavaScript Array flatMap()\r\n\r\nES2019 added the Array flatMap() method to JavaScript.\r\n\r\nThe flatMap() method first maps all elements of\r\n an array and then creates a new array by flattening the array.\r\nExample\r\nconst myArr = [1, 2, 3, 4, 5, 6];\r\nconst newArr = myArr.flatMap((x) => x * 2);\r\n\r\n\r\navaScript Array filter()\r\n\r\nThe filter() method creates a new array with array elements that pass a test.\r\n\r\nThis example creates a new array from elements with a value larger than 18:\r\nExample\r\nconst numbers = [45, 4, 9, 16, 25];\r\nconst over18 = numbers.filter(myFunction);\r\n\r\nfunction myFunction(value, index, array) {\r\n  return value > 18;\r\n} \r\n\r\n\r\nJavaScript Array every()\r\n\r\nThe every() method checks if all array values pass a test.\r\n\r\nThis example checks if all array values are larger than 18:\r\nExample\r\nconst numbers = [45, 4, 9, 16, 25];\r\nlet allOver18 = numbers.every(myFunction);\r\n\r\nfunction myFunction(value, index, array) {\r\n  return value > 18;\r\n} \r\n\r\nJavaScript Array some()\r\n\r\nThe some() method checks if some array values pass a test.\r\n\r\nThis example checks if some array values are larger than 18:\r\nExample\r\nconst numbers = [45, 4, 9, 16, 25];\r\nlet someOver18 = numbers.some(myFunction);\r\n\r\nfunction myFunction(value, index, array) {\r\n  return value > 18;\r\n} \r\n\r\n\r\nJavaScript Array indexOf()\r\n\r\nThe indexOf() method searches an array for an element value and returns its position.\r\n\r\nNote: The first item has position 0, the second item has position 1, and so on.\r\nExample\r\n\r\nSearch an array for the item \"Apple\":\r\nconst fruits = [\"Apple\", \"Orange\", \"Apple\", \"Mango\"];\r\nlet position = fruits.indexOf(\"Apple\") + 1;\r\n\r\n\r\nJavaScript Array find()\r\n\r\nThe find() method returns the value of the first array element that passes a test function.\r\n\r\nThis example finds (returns the value of) the first element that is larger than 18:\r\nExample\r\nconst numbers = [4, 9, 16, 25, 29];\r\nlet first = numbers.find(myFunction);\r\n\r\nfunction myFunction(value, index, array) {\r\n  return value > 18;\r\n} \r\n\r\n\r\nJavaScript Array findIndex()\r\n\r\nThe findIndex() method returns the index of the first array element that passes a test function.\r\n\r\nThis example finds the index of the first element that is larger than 18:\r\nExample\r\nconst numbers = [4, 9, 16, 25, 29];\r\nlet first = numbers.findIndex(myFunction);\r\n\r\nfunction myFunction(value, index, array) {\r\n  return value > 18;\r\n} \r\n\r\n\r\nJavaScript Array.from()\r\n\r\nThe Array.from() method returns an Array object from \r\nany object with a length property or any iterable object.\r\nExample\r\n\r\nCreate an Array from a String:\r\nArray.from(\"ABCDEFG\");\r\n\r\noutput:  A,B,C,D,E,F,G\r\n\r\n\r\nJavaScript Array Keys()\r\n\r\nThe Array.keys() method returns an Array Iterator object with the keys of an array.\r\nExample\r\n\r\nCreate an Array Iterator object, containing the keys of the array:\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nconst keys = fruits.keys();\r\n\r\nfor (let x of keys) {\r\n  text += x + \"<br>\";\r\n}\r\n\r\n\r\navaScript Array entries()\r\nExample\r\n\r\nCreate an Array Iterator, and then iterate over the key/value pairs:\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\nconst f = fruits.entries();\r\n\r\nfor (let x of f) {\r\n  document.getElementById(\"demo\").innerHTML += x;\r\n}\r\n\r\n\r\n\r\nJavaScript Array includes()\r\n\r\nECMAScript 2016 introduced Array.includes() to arrays. \r\nThis allows us to check if an element is present in an\r\n array (including NaN, unlike indexOf).\r\nExample\r\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\r\n\r\nfruits.includes(\"Mango\"); // is true \r\n\r\n\r\nconst q1 = [\"Jan\", \"Feb\", \"Mar\"];\r\nconst q2 = [\"Apr\", \"May\", \"Jun\"];\r\nconst q3 = [\"Jul\", \"Aug\", \"Sep\"];\r\nconst q4 = [\"Oct\", \"Nov\", \"May\"];\r\n\r\nconst year = [...q1, ...q2, ...q3, ...q4];\r\ndocument.getElementById(\"demo\").innerHTML = year; \r\n\r\nJan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,May\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 38, '2023-10-07 22:06:28'),
(77, 'JavaScript Date Objects', 'const d = new Date();\r\nd.toString();\r\nSat Oct 07 2023 22:09:05 GMT+0200 (hora de verano de Europa central)\r\n\r\n\r\nd.toUTCString();\r\nSat, 07 Oct 2023 20:09:32 GMT', 38, '2023-10-07 22:10:15'),
(78, 'JavaScript Get Date Methods', 'Method 	Description\r\ngetFullYear() 	Get year as a four digit number (yyyy)\r\ngetMonth() 	Get month as a number (0-11)\r\ngetDate() 	Get day as a number (1-31)\r\ngetDay() 	Get weekday as a number (0-6)\r\ngetHours() 	Get hour (0-23)\r\ngetMinutes() 	Get minute (0-59)\r\ngetSeconds() 	Get second (0-59)\r\ngetMilliseconds() 	Get millisecond (0-999)\r\ngetTime() 	Get time (milliseconds since January 1, 1970)', 38, '2023-10-07 22:11:41'),
(79, 'JavaScript Set Date Methods', 'Set Date Methods\r\n\r\nSet Date methods are used for setting a part of a date:\r\nMethod 	Description\r\nsetDate() 	Set the day as a number (1-31)\r\nsetFullYear() 	Set the year (optionally month and day)\r\nsetHours() 	Set the hour (0-23)\r\nsetMilliseconds() 	Set the milliseconds (0-999)\r\nsetMinutes() 	Set the minutes (0-59)\r\nsetMonth() 	Set the month (0-11)\r\nsetSeconds() 	Set the seconds (0-59)\r\nsetTime() 	Set the time (milliseconds since January 1, 1970)', 38, '2023-10-07 22:12:19'),
(80, 'JavaScript Math Object', 'Math.E        // returns Euler\'s number\r\nMath.PI       // returns PI\r\nMath.SQRT2    // returns the square root of 2\r\nMath.SQRT1_2  // returns the square root of 1/2\r\nMath.LN2      // returns the natural logarithm of 2\r\nMath.LN10     // returns the natural logarithm of 10\r\nMath.LOG2E    // returns base 2 logarithm of E\r\nMath.LOG10E   // returns base 10 logarithm of E \r\n\r\n\r\n\r\nMath.E: 2.718281828459045\r\n\r\nMath.PI: 3.141592653589793\r\n\r\nMath.SQRT2: 1.4142135623730951\r\n\r\nMath.SQRT1_2: 0.7071067811865476\r\n\r\nMath.LN2: 0.6931471805599453\r\n\r\nMath.LN10: 2.302585092994046\r\n\r\nMath.LOG2E: 1.4426950408889634\r\n\r\nMath.Log10E: 0.4342944819032518\r\n\r\n\r\n\r\nMath Methods\r\n\r\nThe syntax for Math any methods is : Math.method(number)\r\nNumber to Integer\r\n\r\nThere are 4 common methods to round a number to an integer:\r\nMath.round(x)	Returns x rounded to its nearest integer\r\nMath.ceil(x)	Returns x rounded up to its nearest integer\r\nMath.floor(x)	Returns x rounded down to its nearest integer\r\nMath.trunc(x)	Returns the integer part of x (new in ES6)\r\n\r\n\r\nMath.pow()\r\n\r\nMath.pow(x, y) returns the value of x to the power of y:\r\nExample\r\nMath.pow(8, 2);\r\n\r\n\r\nMath.sqrt()\r\n\r\nMath.sqrt(x) returns the square root of x:\r\nExample\r\nMath.sqrt(64);\r\n\r\n\r\nMath.abs()\r\n\r\nMath.abs(x) returns the absolute (positive) value of x:\r\nExample\r\nMath.abs(-4.7);\r\n\r\n\r\nMath.sin()\r\n\r\nMath.sin(x) returns the sine (a value between -1 and 1) of the angle x (given in radians).\r\n\r\nIf you want to use degrees instead of radians, you have to convert degrees to radians:\r\n\r\nAngle in radians = Angle in degrees x PI / 180.\r\n\r\n\r\n\r\nMath.cos()\r\n\r\nMath.cos(x) returns the cosine (a value between -1 and 1) of the angle x (given in radians).\r\n\r\nIf you want to use degrees instead of radians, you have to convert degrees to radians:\r\n\r\nAngle in radians = Angle in degrees x PI / 180.\r\nExample\r\nMath.cos(0 * Math.PI / 180);     // returns 1 (the cos of 0 degrees) \r\n\r\n\r\nMath.min() and Math.max()\r\n\r\nMath.min() and Math.max() can be used to find the lowest or highest value in a list of arguments:\r\nExample\r\nMath.min(0, 150, 30, 20, -8, -200);\r\nExample\r\nMath.max(0, 150, 30, 20, -8, -200);\r\nMath.random()\r\n\r\nMath.random() returns a random number between 0 (inclusive), and 1 (exclusive):\r\nExample\r\nMath.random();\r\n\r\nYou will learn more about Math.random() in the next chapter of this tutorial.\r\nThe Math.log() Method\r\n\r\nMath.log(x) returns the natural logarithm of x.\r\n\r\nThe natural logarithm returns the time needed to reach a certain level of growth:\r\nExamples\r\nMath.log(1);\r\nMath.log(2);\r\nMath.log(3);\r\n\r\nMath.E and Math.log() are twins.\r\n\r\nHow many times must we multiply Math.E to get 10?\r\nMath.log(10);\r\nThe Math.log2() Method\r\n\r\nMath.log2(x) returns the base 2 logarithm of x.\r\n\r\nHow many times must we multiply 2 to get 8?\r\nMath.log2(8);\r\nThe Math.log10() Method\r\n\r\nMath.log10(x) returns the base 10 logarithm of x.\r\n\r\nHow many times must we multiply 10 to get 1000?\r\nMath.log10(1000);\r\nJavaScript Math Methods\r\nMethod 	Description\r\nabs(x) 	Returns the absolute value of x\r\nacos(x) 	Returns the arccosine of x, in radians\r\nacosh(x) 	Returns the hyperbolic arccosine of x\r\nasin(x) 	Returns the arcsine of x, in radians\r\nasinh(x) 	Returns the hyperbolic arcsine of x\r\natan(x) 	Returns the arctangent of x as a numeric value between -PI/2 and PI/2 radians\r\natan2(y, x) 	Returns the arctangent of the quotient of its arguments\r\natanh(x) 	Returns the hyperbolic arctangent of x\r\ncbrt(x) 	Returns the cubic root of x\r\nceil(x) 	Returns x, rounded upwards to the nearest integer\r\ncos(x) 	Returns the cosine of x (x is in radians)\r\ncosh(x) 	Returns the hyperbolic cosine of x\r\nexp(x) 	Returns the value of Ex\r\nfloor(x) 	Returns x, rounded downwards to the nearest integer\r\nlog(x) 	Returns the natural logarithm (base E) of x\r\nmax(x, y, z, ..., n) 	Returns the number with the highest value\r\nmin(x, y, z, ..., n) 	Returns the number with the lowest value\r\npow(x, y) 	Returns the value of x to the power of y\r\nrandom() 	Returns a random number between 0 and 1\r\nround(x) 	Rounds x to the nearest integer\r\nsign(x) 	Returns if x is negative, null or positive (-1, 0, 1)\r\nsin(x) 	Returns the sine of x (x is in radians)\r\nsinh(x) 	Returns the hyperbolic sine of x\r\nsqrt(x) 	Returns the square root of x\r\ntan(x) 	Returns the tangent of an angle\r\ntanh(x) 	Returns the hyperbolic tangent of a number\r\ntrunc(x) 	Returns the integer part of a number (x)\r\n', 38, '2023-10-07 22:18:47'),
(81, 'A Proper Random Function', 'This JavaScript function always returns a random number between min and max (both included):\r\nExample\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n}', 38, '2023-10-07 22:20:26'),
(82, 'PHP File Upload', 'Create The HTML Form\r\n\r\nNext, create an HTML form that allow users\r\n to choose the image file they want to upload:\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<form action=\"upload.php\" method=\"post\" enctype=\"multipart/form-data\">\r\n  Select image to upload:\r\n  <input type=\"file\" name=\"fileToUpload\" id=\"fileToUpload\">\r\n  <input type=\"submit\" value=\"Upload Image\" name=\"submit\">\r\n</form>\r\n\r\n</body>\r\n</html>\r\n\r\n\r\n\r\nCreate The Upload File PHP Script\r\n\r\nThe \"upload.php\" file contains the code for uploading a file:\r\n<?php\r\n$target_dir = \"uploads/\";\r\n$target_file = $target_dir . basename($_FILES[\"fileToUpload\"][\"name\"]);\r\n$uploadOk = 1;\r\n$imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION));\r\n// Check if image file is a actual image or fake image\r\nif(isset($_POST[\"submit\"])) {\r\n  $check = getimagesize($_FILES[\"fileToUpload\"][\"tmp_name\"]);\r\n  if($check !== false) {\r\n    echo \"File is an image - \" . $check[\"mime\"] . \".\";\r\n    $uploadOk = 1;\r\n  } else {\r\n    echo \"File is not an image.\";\r\n    $uploadOk = 0;\r\n  }\r\n}\r\n?>\r\n\r\n\r\n\r\nPHP script explained:\r\n\r\n    $target_dir = \"uploads/\" - specifies the directory where the file is going to be placed\r\n    $target_file specifies the path of the file to be uploaded\r\n    $uploadOk=1 is not used yet (will be used later)\r\n    $imageFileType holds the file extension of the file (in lower case)\r\n    Next, check if the image file is an actual image or a fake image\r\n\r\n\r\n\r\nCheck if File Already Exists\r\n\r\nNow we can add some restrictions.\r\n\r\nFirst, we will check if the file already exists in the \"uploads\" folder.\r\n If it does, an error message is displayed, and $uploadOk is set to 0:\r\n// Check if file already exists\r\nif (file_exists($target_file)) {\r\n  echo \"Sorry, file already exists.\";\r\n  $uploadOk = 0;\r\n}\r\n\r\n\r\n\r\nLimit File Size\r\n\r\nThe file input field in our HTML form above is named \"fileToUpload\".\r\n\r\nNow, we want to check the size of the file. If the file is \r\nlarger than 500KB, an error message is displayed, and $uploadOk is set to 0:\r\n// Check file size\r\nif ($_FILES[\"fileToUpload\"][\"size\"] > 500000) {\r\n  echo \"Sorry, your file is too large.\";\r\n  $uploadOk = 0;\r\n}\r\n\r\n\r\nLimit File Type\r\n\r\nThe code below only allows users to upload JPG, JPEG, PNG, \r\nand GIF files. All other file types gives an \r\nerror message before setting $uploadOk to 0:\r\n// Allow certain file formats\r\nif($imageFileType != \"jpg\" && $imageFileType != \"png\" && $imageFileType != \"jpeg\"\r\n&& $imageFileType != \"gif\" ) {\r\n  echo \"Sorry, only JPG, JPEG, PNG & GIF files are allowed.\";\r\n  $uploadOk = 0;\r\n}\r\n\r\nComplete Upload File PHP Script\r\n\r\nThe complete \"upload.php\" file now looks like this:\r\n<?php\r\n$target_dir = \"uploads/\";\r\n$target_file = $target_dir . basename($_FILES[\"fileToUpload\"][\"name\"]);\r\n$uploadOk = 1;\r\n$imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION));\r\n\r\n// Check if image file is a actual image or fake image\r\nif(isset($_POST[\"submit\"])) {\r\n  $check = getimagesize($_FILES[\"fileToUpload\"][\"tmp_name\"]);\r\n  if($check !== false) {\r\n    echo \"File is an image - \" . $check[\"mime\"] . \".\";\r\n    $uploadOk = 1;\r\n  } else {\r\n    echo \"File is not an image.\";\r\n    $uploadOk = 0;\r\n  }\r\n}\r\n\r\n// Check if file already exists\r\nif (file_exists($target_file)) {\r\n  echo \"Sorry, file already exists.\";\r\n  $uploadOk = 0;\r\n}\r\n\r\n// Check file size\r\nif ($_FILES[\"fileToUpload\"][\"size\"] > 500000) {\r\n  echo \"Sorry, your file is too large.\";\r\n  $uploadOk = 0;\r\n}\r\n\r\n// Allow certain file formats\r\nif($imageFileType != \"jpg\" && $imageFileType != \"png\" && $imageFileType != \"jpeg\"\r\n&& $imageFileType != \"gif\" ) {\r\n  echo \"Sorry, only JPG, JPEG, PNG & GIF files are allowed.\";\r\n  $uploadOk = 0;\r\n}\r\n\r\n// Check if $uploadOk is set to 0 by an error\r\nif ($uploadOk == 0) {\r\n  echo \"Sorry, your file was not uploaded.\";\r\n// if everything is ok, try to upload file\r\n} else {\r\n  if (move_uploaded_file($_FILES[\"fileToUpload\"][\"tmp_name\"], $target_file)) {\r\n    echo \"The file \". htmlspecialchars( basename( $_FILES[\"fileToUpload\"][\"name\"])). \" has been uploaded.\";\r\n  } else {\r\n    echo \"Sorry, there was an error uploading your file.\";\r\n  }\r\n}\r\n?>\r\n\r\n\r\n', 26, '2023-10-08 18:44:53'),
(83, 'PHP Cookies', 'PHP Create/Retrieve a Cookie\r\n\r\nThe following example creates a cookie named \"user\" with the value \"John Doe\". The cookie will expire after 30 days (86400 * 30). The \"/\" means that the cookie is available in entire website (otherwise, select the directory you prefer).\r\n\r\nWe then retrieve the value of the cookie \"user\" (using the global variable $_COOKIE). We also use the isset() function to find out if the cookie is set:\r\nExample\r\nGet your own PHP Server\r\n<?php\r\n$cookie_name = \"user\";\r\n$cookie_value = \"John Doe\";\r\nsetcookie($cookie_name, $cookie_value, time() + (86400 * 30), \"/\"); // 86400 = 1 day\r\n?>\r\n<html>\r\n<body>\r\n\r\n<?php\r\nif(!isset($_COOKIE[$cookie_name])) {\r\n  echo \"Cookie named \'\" . $cookie_name . \"\' is not set!\";\r\n} else {\r\n  echo \"Cookie \'\" . $cookie_name . \"\' is set!<br>\";\r\n  echo \"Value is: \" . $_COOKIE[$cookie_name];\r\n}\r\n?>\r\n\r\n</body>\r\n</html>\r\n\r\nNote: The setcookie() function must appear BEFORE the <html> tag.\r\n\r\nNote: The value of the cookie is automatically \r\nURLencoded when sending the cookie, \r\nand automatically decoded when received \r\n(to prevent URLencoding, use setrawcookie() instead).\r\nModify a Cookie Value\r\n\r\nTo modify a cookie, just set (again) the cookie using the setcookie() function:\r\nExample\r\n<?php\r\n$cookie_name = \"user\";\r\n$cookie_value = \"Alex Porter\";\r\nsetcookie($cookie_name, $cookie_value, time() + (86400 * 30), \"/\");\r\n?>\r\n<html>\r\n<body>\r\n\r\n<?php\r\nif(!isset($_COOKIE[$cookie_name])) {\r\n  echo \"Cookie named \'\" . $cookie_name . \"\' is not set!\";\r\n} else {\r\n  echo \"Cookie \'\" . $cookie_name . \"\' is set!<br>\";\r\n  echo \"Value is: \" . $_COOKIE[$cookie_name];\r\n}\r\n?>\r\n\r\n</body>\r\n</html>\r\nDelete a Cookie\r\n\r\nTo delete a cookie, use the setcookie() function with an expiration date in the past:\r\nExample\r\n<?php\r\n// set the expiration date to one hour ago\r\nsetcookie(\"user\", \"\", time() - 3600);\r\n?>\r\n<html>\r\n<body>\r\n\r\n<?php\r\necho \"Cookie \'user\' is deleted.\";\r\n?>\r\n\r\n</body>\r\n</html>\r\nCheck if Cookies are Enabled\r\n\r\nThe following example creates a small script that checks whether cookies are enabled.\r\n First, try to create a test cookie with the\r\n setcookie() function, then count the $_COOKIE array variable:\r\nExample\r\n<?php\r\nsetcookie(\"test_cookie\", \"test\", time() + 3600, \'/\');\r\n?>\r\n<html>\r\n<body>\r\n\r\n<?php\r\nif(count($_COOKIE) > 0) {\r\n  echo \"Cookies are enabled.\";\r\n} else {\r\n  echo \"Cookies are disabled.\";\r\n}\r\n?>\r\n\r\n</body>\r\n</html>\r\n', 26, '2023-10-08 18:48:34'),
(84, 'PHP Filters Validating and  Sanitizing data ', 'PHP filter_var() Function\r\n\r\nThe filter_var() function both validate and sanitize data.\r\n\r\nThe filter_var() function filters a single variable \r\nwith a specified filter. It takes two pieces of data:\r\n\r\n    The variable you want to check\r\n    The type of check to use\r\n\r\nSanitize a String\r\n\r\nThe following example uses the filter_var() function \r\nto remove all HTML tags from a string:\r\nExample\r\n<?php\r\n$str = \"<h1>Hello World!</h1>\";\r\n$newstr = filter_var($str, FILTER_SANITIZE_STRING);\r\necho $newstr;\r\n?>\r\nValidate an Integer\r\n\r\nThe following example uses the filter_var() function to \r\ncheck if the variable $int is an integer. If $int is an integer, \r\nthe output of the code below will be: \"Integer is valid\". \r\nIf $int is not an integer, the output will be: \"Integer is not valid\":\r\nExample\r\n<?php\r\n$int = 100;\r\n\r\nif (!filter_var($int, FILTER_VALIDATE_INT) === false) {\r\n  echo(\"Integer is valid\");\r\n} else {\r\n  echo(\"Integer is not valid\");\r\n}\r\n?>\r\nTip: filter_var() and Problem With 0\r\n\r\nIn the example above, if $int was set to 0, the function above \r\nwill return \"Integer is not valid\". To solve this problem, use the code below:\r\nExample\r\n<?php\r\n$int = 0;\r\n\r\nif (filter_var($int, FILTER_VALIDATE_INT) === 0 ||\r\n               !filter_var($int, FILTER_VALIDATE_INT) === false) {\r\n  echo(\"Integer is valid\");\r\n} else {\r\n  echo(\"Integer is not valid\");\r\n}\r\n?>\r\nValidate an IP Address\r\n\r\nThe following example uses the filter_var() \r\nfunction to check if the variable $ip is a valid IP address:\r\nExample\r\n<?php\r\n$ip = \"127.0.0.1\";\r\n\r\nif (!filter_var($ip, FILTER_VALIDATE_IP) === false) {\r\n  echo(\"$ip is a valid IP address\");\r\n} else {\r\n  echo(\"$ip is not a valid IP address\");\r\n}\r\n?>\r\nSanitize and Validate an Email Address\r\n\r\nThe following example uses the filter_var() function to first remove all \r\nillegal characters from the $email variable,\r\n then check if it is a valid email address:\r\nExample\r\n<?php\r\n$email = \"john.doe@example.com\";\r\n\r\n// Remove all illegal characters from email\r\n$email = filter_var($email, FILTER_SANITIZE_EMAIL);\r\n\r\n// Validate e-mail\r\nif (!filter_var($email, FILTER_VALIDATE_EMAIL) === false) {\r\n  echo(\"$email is a valid email address\");\r\n} else {\r\n  echo(\"$email is not a valid email address\");\r\n}\r\n?>\r\nSanitize and Validate a URL\r\n\r\nThe following example uses the filter_var() function to \r\nfirst remove all illegal characters from a URL,\r\n then check if $url is a valid URL:\r\nExample\r\n<?php\r\n$url = \"https://www.w3schools.com\";\r\n\r\n// Remove all illegal characters from a url\r\n$url = filter_var($url, FILTER_SANITIZE_URL);\r\n\r\n// Validate url\r\nif (!filter_var($url, FILTER_VALIDATE_URL) === false) {\r\n  echo(\"$url is a valid URL\");\r\n} else {\r\n  echo(\"$url is not a valid URL\");\r\n}\r\n?> ', 26, '2023-10-08 22:28:07'),
(85, 'PHP Filters Advanced Validation', 'Validate an Integer Within a Range\r\n\r\nThe following example uses the filter_var() function to \r\ncheck if a variable is both of type INT, and between 1 and 200:\r\nExample\r\nGet your own PHP Server\r\n<?php\r\n$int = 122;\r\n$min = 1;\r\n$max = 200;\r\n\r\nif (filter_var($int, FILTER_VALIDATE_INT, \r\n   array(\"options\" => array(\"min_range\"=>$min, \r\n       \"max_range\"=>$max))) === false) {\r\n  echo(\"Variable value is not within the legal range\");\r\n} else {\r\n  echo(\"Variable value is within the legal range\");\r\n}\r\n?>\r\nValidate IPv6 Address\r\n\r\nThe following example uses the filter_var() \r\nfunction to check if the variable \r\n$ip is a valid IPv6 address:\r\nExample\r\n<?php\r\n$ip = \"2001:0db8:85a3:08d3:1319:8a2e:0370:7334\";\r\n\r\nif (!filter_var($ip, FILTER_VALIDATE_IP,\r\n              FILTER_FLAG_IPV6) === false) {\r\n  echo(\"$ip is a valid IPv6 address\");\r\n} else {\r\n  echo(\"$ip is not a valid IPv6 address\");\r\n}\r\n?>\r\nValidate URL - Must Contain QueryString\r\n\r\nThe following example uses the filter_var() \r\nfunction to check if the variable $url is a URL with a querystring:\r\nExample\r\n<?php\r\n$url = \"https://www.w3schools.com\";\r\n\r\nif (!filter_var($url, FILTER_VALIDATE_URL,\r\n             FILTER_FLAG_QUERY_REQUIRED) === false) {\r\n  echo(\"$url is a valid URL with a query string\");\r\n} else {\r\n  echo(\"$url is not a valid URL with a query string\");\r\n}\r\n?>\r\nRemove Characters With ASCII Value > 127\r\n\r\nThe following example uses the filter_var() function to sanitize a string.\r\n It will both remove all HTML tags, \r\nand all characters with ASCII value > 127, from the string:\r\nExample\r\n<?php\r\n$str = \"<h1>Hello WorldÆØÅ!</h1>\";\r\n\r\n$newstr = filter_var($str, FILTER_SANITIZE_STRING, FILTER_FLAG_STRIP_HIGH);\r\necho $newstr;\r\n?> ', 26, '2023-10-08 22:30:53'),
(86, 'table html', '<table>\r\n        <legend>Alumno</legend>\r\n        <caption>alumno</caption>\r\n        <colgroup>\r\n        <col span=\"1\" style=\"background-color: aqua;\" >\r\n        <col span=\"2\" style=\"background-color: rgb(61, 63, 63);\" >\r\n        </colgroup>\r\n        <thead>\r\n            <tr>\r\n                <th>nombre</th>\r\n                <th>apilledo</th>\r\n                <th>DNI O NIE</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <td>oussama</td>\r\n            <td>yaagoub</td>\r\n            <td>y2373823b</td>\r\n        </tbody>\r\n    </table>', 14, '2023-10-10 18:22:56'),
(87, 'disorder and order and definition list html', '<ul style=\"list-style-type: disc;\">\r\n        <li>pollo</li>\r\n        <li>leche</li>\r\n        <li>huevos</li>\r\n        <li>pan</li>\r\n    </ul>\r\n    <ol type=\"i\" start=\"3\">\r\n        <li>pollo</li>\r\n        <li>leche</li>\r\n        <li>huevos</li>\r\n        <li>pan</li>\r\n    </ol>\r\n    <dl>\r\n        <dt>cafe</dt>\r\n        <dd>Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n             Cupiditate doloremque placeat eius quas, \r\n             modi tenetur aut eveniet velit deserunt vitae! Delectus \r\n             eligendi animi quibusdam veniam enim ducimus, \r\n             sint odio eveniet atque eos?</dd>\r\n        <dt>cafe</dt>\r\n        <dd>Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                  Cupiditate doloremque placeat eius quas, \r\n                  modi tenetur aut eveniet velit deserunt vitae! Delectus \r\n                  eligendi animi quibusdam veniam enim ducimus, \r\n                  sint odio eveniet atque eos?</dd>\r\n    </dl>', 14, '2023-10-10 18:32:49'),
(88, 'FORM HTML', '<form action=\"\" method=\"post\">\r\n        <input type=\"text\" name=\"\" id=\" \" maxlength=\"3\">\r\n        <input type=\"datetime-local\" name=\"\" id=\"\">\r\n        <input type=\"datetime\" name=\"\" id=\"\">\r\n        <input type=\"date\" name=\"\" id=\"\">\r\n        <input type=\"color\" value=\"\">\r\n        <input type=\"file\" name=\"\" id=\"\">\r\n        <input type=\"image\" src=\"\" alt=\"\">\r\n        <input type=\"number\" min=\"2\" max=\"35\">\r\n        <input type=\"submit\" value=\"\">\r\n        <input type=\"checkbox\" name=\"\" id=\"\">\r\n        <input type=\"radio\" name=\"radio\" id=\"\">\r\n        <input type=\"radio\" name=\"radio\" id=\"\">\r\n        <input type=\"range\" name=\"\" id=\"\">\r\n        <select name=\"\" id=\"\">\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n        </select><br>\r\n        <input list=\"data\">\r\n        <datalist id=\"data\">\r\n            <option value=\"24\">\r\n            <option value=\"23\">\r\n            <option value=\"3\">\r\n        </datalist>\r\n        <fieldset>\r\n            <legend>grop data</legend>\r\n        </fieldset>\r\n    </form>', 14, '2023-10-10 19:30:48'),
(89, 'Event \"click\"', 'const div = document.getElementById(\"a\");\r\n\r\nfunction dale() {\r\n    div.innerHTML=\"hy stupid teacher\";\r\n}\r\ndiv.addEventListener(\"click\",dale,false);\r\n\r\n', 38, '2023-10-16 19:17:31'),
(90, 'To convert a decimal number to its binary representation in JavaScript', 'const decimalNumber = 42; // Replace with your desired decimal number\r\nconst binaryString = decimalNumber.toString(2);\r\nconsole.log(binaryString);\r\n', 38, '2023-10-16 19:27:27'),
(91, 'dependencies tomcat9', '\r\n    \r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n            <version>5.1.48</version> <!-- Use the appropriate version -->\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>javax.servlet</groupId>\r\n            <artifactId>javax.servlet-api</artifactId>\r\n            <version>4.0.1</version> <!-- Use the appropriate version -->\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>javax.servlet</groupId>\r\n            <artifactId>jstl</artifactId>\r\n            <version>1.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>jakarta.platform</groupId>\r\n            <artifactId>jakarta.jakartaee-api</artifactId>\r\n            <version>${jakartaee}</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n    </dependencies>\r\n    ', 51, '2023-11-13 17:35:36'),
(92, 'redirect', 'response.sendRedirect(\"/Dashboard\");', 51, '2023-11-13 17:36:49'),
(93, 'doPost', '@Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }', 51, '2023-11-13 17:37:58'),
(94, 'doGet', '@Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        \r\n    }', 51, '2023-11-13 17:38:51'),
(95, 'set varible to pass it to jsp', 'request.setAttribute(\"title\", \"Dashboard\");', 51, '2023-11-13 17:39:47'),
(96, 'get paramrters from doGet https://x.com/dashboard?local=degwergwgwg', 'String idParam = request.getParameter(\"local\");\r\n        if (idParam != null){\r\n            request.setAttribute(\"alumnos\", dbm.AlumnosLocal(idParam));\r\n        }else {\r\n            request.setAttribute(\"alumnos\", dbm.Alumnos());\r\n        }', 51, '2023-11-13 17:44:18'),
(97, 'remove duplicated  values', 'private int containsGobby(ArrayList<Hobbie> list, String gobby) {\r\n        int x=0;\r\n        for (Hobbie h : list) {\r\n            if (h.getGobby().equals(gobby)) {\r\n                x=h.getId();\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n\r\n\r\nfor (Alumno a :y) {\r\n                    for (Hobbie h : a.getHobbies()) {\r\n                        if (containsGobby(bd.Hobbies(), h.getGobby()) != 0) {\r\n                            h.setId(containsGobby(bd.Hobbies(), h.getGobby()));\r\n                        }\r\n                    }\r\n                    bd.add(a);\r\n                }', 51, '2023-11-13 17:48:48'),
(98, 'start session', 'import javax.servlet.http.HttpSession;\r\n\r\n\r\n\r\n\r\nHttpSession session = request.getSession(); \r\n// Get the existing session or create a new one\r\n                // Set an attribute in the session\r\nsession.setAttribute(\"usuario\", usuario);', 51, '2023-11-13 17:50:28'),
(99, 'destroy session', 'HttpSession session = request.getSession();\r\nsession.invalidate();', 51, '2023-11-13 17:51:49');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `asignaturas`
--

CREATE TABLE `asignaturas` (
  `id` int NOT NULL,
  `nombre` varchar(255) COLLATE utf8mb4_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `asignaturas`
--

INSERT INTO `asignaturas` (`id`, `nombre`) VALUES
(1, 'DAW'),
(2, 'DIW'),
(3, 'DWES'),
(4, 'DWEC'),
(5, 'DWES_JAVA'),
(6, 'PROJECT_FINAL');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `temas`
--

CREATE TABLE `temas` (
  `id` int NOT NULL,
  `nombre` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `asignatura_id` int NOT NULL,
  `fecha` datetime DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `temas`
--

INSERT INTO `temas` (`id`, `nombre`, `asignatura_id`, `fecha`) VALUES
(2, 'Tema 1', 1, '2023-09-28 03:43:12'),
(3, 'Tema 2', 1, '2023-09-28 03:43:12'),
(4, 'Tema 3', 1, '2023-09-28 03:43:12'),
(5, 'Tema 4', 1, '2023-09-28 03:43:12'),
(6, 'Tema 5', 1, '2023-09-28 03:43:12'),
(7, 'Tema 6', 1, '2023-09-28 03:43:12'),
(8, 'Tema 7', 1, '2023-09-28 03:43:12'),
(9, 'Tema 8', 1, '2023-09-28 03:43:12'),
(10, 'Tema 9', 1, '2023-09-28 03:43:12'),
(11, 'Tema 10', 1, '2023-09-28 03:43:12'),
(12, 'Tema 11', 1, '2023-09-28 03:43:12'),
(13, 'Tema 12', 1, '2023-09-28 03:43:12'),
(14, 'Tema 1', 2, '2023-09-28 03:48:48'),
(15, 'Tema 2', 2, '2023-09-28 03:48:48'),
(16, 'Tema 3', 2, '2023-09-28 03:48:48'),
(17, 'Tema 4', 2, '2023-09-28 03:48:48'),
(18, 'Tema 5', 2, '2023-09-28 03:48:48'),
(19, 'Tema 6', 2, '2023-09-28 03:48:48'),
(20, 'Tema 7', 2, '2023-09-28 03:48:48'),
(21, 'Tema 8', 2, '2023-09-28 03:48:48'),
(22, 'Tema 9', 2, '2023-09-28 03:48:48'),
(23, 'Tema 10', 2, '2023-09-28 03:48:48'),
(24, 'Tema 11', 2, '2023-09-28 03:48:48'),
(25, 'Tema 12', 2, '2023-09-28 03:48:48'),
(26, 'Tema 1', 3, '2023-09-28 03:51:37'),
(27, 'Tema 2', 3, '2023-09-28 03:51:37'),
(28, 'Tema 3', 3, '2023-09-28 03:51:37'),
(29, 'Tema 4', 3, '2023-09-28 03:51:37'),
(30, 'Tema 5', 3, '2023-09-28 03:51:37'),
(31, 'Tema 6', 3, '2023-09-28 03:51:37'),
(32, 'Tema 7', 3, '2023-09-28 03:51:37'),
(33, 'Tema 8', 3, '2023-09-28 03:51:37'),
(34, 'Tema 9', 3, '2023-09-28 03:51:37'),
(35, 'Tema 10', 3, '2023-09-28 03:51:37'),
(36, 'Tema 11', 3, '2023-09-28 03:51:37'),
(37, 'Tema 12', 3, '2023-09-28 03:51:37'),
(38, 'Tema 1', 4, '2023-09-28 03:51:37'),
(39, 'Tema 2', 4, '2023-09-28 03:51:37'),
(40, 'Tema 3', 4, '2023-09-28 03:51:37'),
(41, 'Tema 4', 4, '2023-09-28 03:51:37'),
(42, 'Tema 5', 4, '2023-09-28 03:51:37'),
(43, 'Tema 6', 4, '2023-09-28 03:51:37'),
(44, 'Tema 7', 4, '2023-09-28 03:51:37'),
(45, 'Tema 8', 4, '2023-09-28 03:51:37'),
(46, 'Tema 9', 4, '2023-09-28 03:51:37'),
(47, 'Tema 10', 4, '2023-09-28 03:51:37'),
(48, 'Tema 11', 4, '2023-09-28 03:51:37'),
(49, 'Tema 12', 4, '2023-09-28 03:51:37'),
(50, 'Tema 1', 5, '2023-09-28 03:51:37'),
(51, 'Tema 2', 5, '2023-09-28 03:51:37'),
(52, 'Tema 3', 5, '2023-09-28 03:51:37'),
(53, 'Tema 4', 5, '2023-09-28 03:51:37'),
(54, 'Tema 5', 5, '2023-09-28 03:51:37'),
(55, 'Tema 6', 5, '2023-09-28 03:51:37'),
(56, 'Tema 7', 5, '2023-09-28 03:51:37'),
(57, 'Tema 8', 5, '2023-09-28 03:51:37'),
(58, 'Tema 9', 5, '2023-09-28 03:51:37'),
(59, 'Tema 10', 5, '2023-09-28 03:51:37'),
(60, 'Tema 11', 5, '2023-09-28 03:51:37'),
(61, 'Tema 12', 5, '2023-09-28 03:51:37'),
(62, 'Tema 1', 6, '2023-09-28 03:51:37'),
(63, 'Tema 2', 6, '2023-09-28 03:51:37'),
(64, 'Tema 3', 6, '2023-09-28 03:51:37'),
(65, 'Tema 4', 6, '2023-09-28 03:51:37'),
(66, 'Tema 5', 6, '2023-09-28 03:51:37'),
(67, 'Tema 6', 6, '2023-09-28 03:51:37'),
(68, 'Tema 7', 6, '2023-09-28 03:51:37'),
(69, 'Tema 8', 6, '2023-09-28 03:51:37'),
(70, 'Tema 9', 6, '2023-09-28 03:51:37'),
(71, 'Tema 10', 6, '2023-09-28 03:51:37'),
(72, 'Tema 11', 6, '2023-09-28 03:51:37'),
(73, 'Tema 12', 6, '2023-09-28 03:51:37');

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `apuntes`
--
ALTER TABLE `apuntes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `tema_id` (`tema_id`);

--
-- Indices de la tabla `asignaturas`
--
ALTER TABLE `asignaturas`
  ADD PRIMARY KEY (`id`);

--
-- Indices de la tabla `temas`
--
ALTER TABLE `temas`
  ADD PRIMARY KEY (`id`),
  ADD KEY `asignatura_id` (`asignatura_id`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `apuntes`
--
ALTER TABLE `apuntes`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=102;

--
-- AUTO_INCREMENT de la tabla `asignaturas`
--
ALTER TABLE `asignaturas`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT de la tabla `temas`
--
ALTER TABLE `temas`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=74;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `apuntes`
--
ALTER TABLE `apuntes`
  ADD CONSTRAINT `apuntes_ibfk_1` FOREIGN KEY (`tema_id`) REFERENCES `temas` (`id`);

--
-- Filtros para la tabla `temas`
--
ALTER TABLE `temas`
  ADD CONSTRAINT `temas_ibfk_1` FOREIGN KEY (`asignatura_id`) REFERENCES `asignaturas` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
